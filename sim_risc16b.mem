//set while loop num
@0000 00001000 01111111  // lli  r0, 127
@0002 00110001 10011001  // lui  r1, #99
@0004 00000000 00110000  // sw   r0, (r1)

//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$while loop$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


//#########################calc eval value#########################
//   /*
//     r0 : best eval value
//     r1 : gene offset    , window offset 
//     r2 : gene x         , window data{(genex,geney)~{genex+16,geney+16}}
//     r3 : gene y,        , calc eval value iteretor 1
//     r4 : serach offset
//     r5 : serach data
//     r6 : calc eval value iteretor 2
//     r7 : eval value

//     0x9800 : best gene No
//   */

//reset best eval value
@0006 00001000 11111111  // lli  r0, -1


//----------0 gene----------

//reset eval value
@0008 00001111 00000000  // lli  r7, 0
//set eval value
@000a 00110001 10100000  // lui  r1, #a0    //add 
@000c 00000010 00110011  // lbu  r2, (r1)
@000e 00100001 00000001  // addi r1, 1
@0010 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0012 00000110 01000001  // mov  r6, r2
@0014 00100110 10001111  // addi r6, -113
@0016 10011110 01000110  // bpl  r6, 70
@0018 00000110 01100001  // mov  r6, r3
@001a 00100110 10001111  // addi r6, -113
@001c 10011110 01000000  // bpl  r6, 64

//calc eval value
@001e 00110100 10110000  // lui  r4, #b0
@0020 00000001 01000110  // sl8  r1, r2
@0022 00000001 00101001  // sr   r1, r1
@0024 00110101 11000000  // lui  r5, #c0
@0026 00000001 10100100  // add  r1, r5
@0028 00000001 01100100  // add  r1, r3
@002a 00001011 00010000  // lli  r3, 16
//y loop
@002c 00001110 00010000  // lli  r6, 16
//x loop
@002e 00000010 00110011  // lbu  r2, (r1)
@0030 00000101 10010011  // lbu  r5, (r4)
@0032 00000101 01000101  // sub  r5, r2
@0034 10011101 00000110  // bpl  r5, 6
@0036 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0038 00000010 10100010  // not  r2, r5
@003a 00100010 00000001  // addi r2, 1
@003c 00001101 11111111  // lli  r5, #ff
@003e 00000101 01000101  // sub  r5, r2
@0040 00000111 10100100  // add  r7, r5
//update coordinate
@0042 00100001 00000001  // addi r1, 1
@0044 00100100 00000001  // addi r4, 1
@0046 00100110 11111111  // addi r6, -1
@0048 10001110 11100100  // bnez r6, -28
@004a 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@004c 00100001 11110000  // addi r1, -16
@004e 00100011 11111111  // addi r3, -1
@0050 00100001 00000001  // addi r1, 1             //plus (128)
@0052 10001011 11011000  // bnez r3, -40 
@0054 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0056 00000111 11101001  // sr   r7, r7
@0058 00110001 10100000  // lui  r1, #a0
@005a 00100001 00000100  // addi r1, #04    //add 
@005c 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@005e 00000110 11100001  // mov  r6, r7
@0060 00000110 00000101  // sub  r6, r0
@0062 10010110 00001010  // bmi  r6, 10  //NOCHANGE
@0064 10000110 00001000  // beqz r6, 8   //NOCHANGE
@0066 00000000 11100001  // mov  r0, r7
@0068 00110011 10100000  // lui  r3, #a0    //add
@006a 00110100 10011000  // lui  r4, #98
@006c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@006e 11000000 00000100  // j 4
@0070 00000000 00000000  // nop 
@0072 11000000 10010010  // j -110
//----------1 gene----------

//reset eval value
@0074 00001111 00000000  // lli  r7, 0
//set eval value
@0076 00110001 10100000  // lui  r1, #a0    //add 
@0078 00100001 00001000  // addi  r1, #08
@007a 00000010 00110011  // lbu  r2, (r1)
@007c 00100001 00000001  // addi r1, 1
@007e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0080 00000110 01000001  // mov  r6, r2
@0082 00100110 10001111  // addi r6, -113
@0084 10011110 01000110  // bpl  r6, 70
@0086 00000110 01100001  // mov  r6, r3
@0088 00100110 10001111  // addi r6, -113
@008a 10011110 01000000  // bpl  r6, 64

//calc eval value
@008c 00110100 10110000  // lui  r4, #b0
@008e 00000001 01000110  // sl8  r1, r2
@0090 00000001 00101001  // sr   r1, r1
@0092 00110101 11000000  // lui  r5, #c0
@0094 00000001 10100100  // add  r1, r5
@0096 00000001 01100100  // add  r1, r3
@0098 00001011 00010000  // lli  r3, 16
//y loop
@009a 00001110 00010000  // lli  r6, 16
//x loop
@009c 00000010 00110011  // lbu  r2, (r1)
@009e 00000101 10010011  // lbu  r5, (r4)
@00a0 00000101 01000101  // sub  r5, r2
@00a2 10011101 00000110  // bpl  r5, 6
@00a4 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@00a6 00000010 10100010  // not  r2, r5
@00a8 00100010 00000001  // addi r2, 1
@00aa 00001101 11111111  // lli  r5, #ff
@00ac 00000101 01000101  // sub  r5, r2
@00ae 00000111 10100100  // add  r7, r5
//update coordinate
@00b0 00100001 00000001  // addi r1, 1
@00b2 00100100 00000001  // addi r4, 1
@00b4 00100110 11111111  // addi r6, -1
@00b6 10001110 11100100  // bnez r6, -28
@00b8 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@00ba 00100001 11110000  // addi r1, -16
@00bc 00100011 11111111  // addi r3, -1
@00be 00100001 00000001  // addi r1, 1             //plus (128)
@00c0 10001011 11011000  // bnez r3, -40 
@00c2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@00c4 00000111 11101001  // sr   r7, r7
@00c6 00110001 10100000  // lui  r1, #a0
@00c8 00100001 00001100  // addi r1, #0c    //add 
@00ca 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@00cc 00000110 11100001  // mov  r6, r7
@00ce 00000110 00000101  // sub  r6, r0
@00d0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@00d2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@00d4 00000000 11100001  // mov  r0, r7
@00d6 00110011 10100000  // lui  r3, #a0    //add
@00d8 00100011 00001000  // addi r3, #08
@00da 00110100 10011000  // lui  r4, #98
@00dc 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@00de 11000000 00000100  // j 4
@00e0 00000000 00000000  // nop 
@00e2 11000000 10001110  // j -114
//----------2 gene----------

//reset eval value
@00e4 00001111 00000000  // lli  r7, 0
//set eval value
@00e6 00110001 10100000  // lui  r1, #a0    //add 
@00e8 00100001 00010000  // addi  r1, #10
@00ea 00000010 00110011  // lbu  r2, (r1)
@00ec 00100001 00000001  // addi r1, 1
@00ee 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@00f0 00000110 01000001  // mov  r6, r2
@00f2 00100110 10001111  // addi r6, -113
@00f4 10011110 01000110  // bpl  r6, 70
@00f6 00000110 01100001  // mov  r6, r3
@00f8 00100110 10001111  // addi r6, -113
@00fa 10011110 01000000  // bpl  r6, 64

//calc eval value
@00fc 00110100 10110000  // lui  r4, #b0
@00fe 00000001 01000110  // sl8  r1, r2
@0100 00000001 00101001  // sr   r1, r1
@0102 00110101 11000000  // lui  r5, #c0
@0104 00000001 10100100  // add  r1, r5
@0106 00000001 01100100  // add  r1, r3
@0108 00001011 00010000  // lli  r3, 16
//y loop
@010a 00001110 00010000  // lli  r6, 16
//x loop
@010c 00000010 00110011  // lbu  r2, (r1)
@010e 00000101 10010011  // lbu  r5, (r4)
@0110 00000101 01000101  // sub  r5, r2
@0112 10011101 00000110  // bpl  r5, 6
@0114 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0116 00000010 10100010  // not  r2, r5
@0118 00100010 00000001  // addi r2, 1
@011a 00001101 11111111  // lli  r5, #ff
@011c 00000101 01000101  // sub  r5, r2
@011e 00000111 10100100  // add  r7, r5
//update coordinate
@0120 00100001 00000001  // addi r1, 1
@0122 00100100 00000001  // addi r4, 1
@0124 00100110 11111111  // addi r6, -1
@0126 10001110 11100100  // bnez r6, -28
@0128 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@012a 00100001 11110000  // addi r1, -16
@012c 00100011 11111111  // addi r3, -1
@012e 00100001 00000001  // addi r1, 1             //plus (128)
@0130 10001011 11011000  // bnez r3, -40 
@0132 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0134 00000111 11101001  // sr   r7, r7
@0136 00110001 10100000  // lui  r1, #a0
@0138 00100001 00010100  // addi r1, #014    //add 
@013a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@013c 00000110 11100001  // mov  r6, r7
@013e 00000110 00000101  // sub  r6, r0
@0140 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0142 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0144 00000000 11100001  // mov  r0, r7
@0146 00110011 10100000  // lui  r3, #a0    //add
@0148 00100011 00010000  // addi r3, #10
@014a 00110100 10011000  // lui  r4, #98
@014c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@014e 11000000 00000100  // j 4
@0150 00000000 00000000  // nop 
@0152 11000000 10001110  // j -114
//----------3 gene----------

//reset eval value
@0154 00001111 00000000  // lli  r7, 0
//set eval value
@0156 00110001 10100000  // lui  r1, #a0    //add 
@0158 00100001 00011000  // addi  r1, #18
@015a 00000010 00110011  // lbu  r2, (r1)
@015c 00100001 00000001  // addi r1, 1
@015e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0160 00000110 01000001  // mov  r6, r2
@0162 00100110 10001111  // addi r6, -113
@0164 10011110 01000110  // bpl  r6, 70
@0166 00000110 01100001  // mov  r6, r3
@0168 00100110 10001111  // addi r6, -113
@016a 10011110 01000000  // bpl  r6, 64

//calc eval value
@016c 00110100 10110000  // lui  r4, #b0
@016e 00000001 01000110  // sl8  r1, r2
@0170 00000001 00101001  // sr   r1, r1
@0172 00110101 11000000  // lui  r5, #c0
@0174 00000001 10100100  // add  r1, r5
@0176 00000001 01100100  // add  r1, r3
@0178 00001011 00010000  // lli  r3, 16
//y loop
@017a 00001110 00010000  // lli  r6, 16
//x loop
@017c 00000010 00110011  // lbu  r2, (r1)
@017e 00000101 10010011  // lbu  r5, (r4)
@0180 00000101 01000101  // sub  r5, r2
@0182 10011101 00000110  // bpl  r5, 6
@0184 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0186 00000010 10100010  // not  r2, r5
@0188 00100010 00000001  // addi r2, 1
@018a 00001101 11111111  // lli  r5, #ff
@018c 00000101 01000101  // sub  r5, r2
@018e 00000111 10100100  // add  r7, r5
//update coordinate
@0190 00100001 00000001  // addi r1, 1
@0192 00100100 00000001  // addi r4, 1
@0194 00100110 11111111  // addi r6, -1
@0196 10001110 11100100  // bnez r6, -28
@0198 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@019a 00100001 11110000  // addi r1, -16
@019c 00100011 11111111  // addi r3, -1
@019e 00100001 00000001  // addi r1, 1             //plus (128)
@01a0 10001011 11011000  // bnez r3, -40 
@01a2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@01a4 00000111 11101001  // sr   r7, r7
@01a6 00110001 10100000  // lui  r1, #a0
@01a8 00100001 00011100  // addi r1, #01c    //add 
@01aa 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@01ac 00000110 11100001  // mov  r6, r7
@01ae 00000110 00000101  // sub  r6, r0
@01b0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@01b2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@01b4 00000000 11100001  // mov  r0, r7
@01b6 00110011 10100000  // lui  r3, #a0    //add
@01b8 00100011 00011000  // addi r3, #18
@01ba 00110100 10011000  // lui  r4, #98
@01bc 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@01be 11000000 00000100  // j 4
@01c0 00000000 00000000  // nop 
@01c2 11000000 10001110  // j -114
//----------4 gene----------

//reset eval value
@01c4 00001111 00000000  // lli  r7, 0
//set eval value
@01c6 00110001 10100000  // lui  r1, #a0    //add 
@01c8 00100001 00100000  // addi  r1, #20
@01ca 00000010 00110011  // lbu  r2, (r1)
@01cc 00100001 00000001  // addi r1, 1
@01ce 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@01d0 00000110 01000001  // mov  r6, r2
@01d2 00100110 10001111  // addi r6, -113
@01d4 10011110 01000110  // bpl  r6, 70
@01d6 00000110 01100001  // mov  r6, r3
@01d8 00100110 10001111  // addi r6, -113
@01da 10011110 01000000  // bpl  r6, 64

//calc eval value
@01dc 00110100 10110000  // lui  r4, #b0
@01de 00000001 01000110  // sl8  r1, r2
@01e0 00000001 00101001  // sr   r1, r1
@01e2 00110101 11000000  // lui  r5, #c0
@01e4 00000001 10100100  // add  r1, r5
@01e6 00000001 01100100  // add  r1, r3
@01e8 00001011 00010000  // lli  r3, 16
//y loop
@01ea 00001110 00010000  // lli  r6, 16
//x loop
@01ec 00000010 00110011  // lbu  r2, (r1)
@01ee 00000101 10010011  // lbu  r5, (r4)
@01f0 00000101 01000101  // sub  r5, r2
@01f2 10011101 00000110  // bpl  r5, 6
@01f4 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@01f6 00000010 10100010  // not  r2, r5
@01f8 00100010 00000001  // addi r2, 1
@01fa 00001101 11111111  // lli  r5, #ff
@01fc 00000101 01000101  // sub  r5, r2
@01fe 00000111 10100100  // add  r7, r5
//update coordinate
@0200 00100001 00000001  // addi r1, 1
@0202 00100100 00000001  // addi r4, 1
@0204 00100110 11111111  // addi r6, -1
@0206 10001110 11100100  // bnez r6, -28
@0208 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@020a 00100001 11110000  // addi r1, -16
@020c 00100011 11111111  // addi r3, -1
@020e 00100001 00000001  // addi r1, 1             //plus (128)
@0210 10001011 11011000  // bnez r3, -40 
@0212 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0214 00000111 11101001  // sr   r7, r7
@0216 00110001 10100000  // lui  r1, #a0
@0218 00100001 00100100  // addi r1, #24    //add 
@021a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@021c 00000110 11100001  // mov  r6, r7
@021e 00000110 00000101  // sub  r6, r0
@0220 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0222 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0224 00000000 11100001  // mov  r0, r7
@0226 00110011 10100000  // lui  r3, #a0    //add
@0228 00100011 00100000  // addi r3, #20
@022a 00110100 10011000  // lui  r4, #98
@022c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@022e 11000000 00000100  // j 4
@0230 00000000 00000000  // nop 
@0232 11000000 10001110  // j -114
//----------5 gene----------

//reset eval value
@0234 00001111 00000000  // lli  r7, 0
//set eval value
@0236 00110001 10100000  // lui  r1, #a0    //add 
@0238 00100001 00101000  // addi  r1, #28
@023a 00000010 00110011  // lbu  r2, (r1)
@023c 00100001 00000001  // addi r1, 1
@023e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0240 00000110 01000001  // mov  r6, r2
@0242 00100110 10001111  // addi r6, -113
@0244 10011110 01000110  // bpl  r6, 70
@0246 00000110 01100001  // mov  r6, r3
@0248 00100110 10001111  // addi r6, -113
@024a 10011110 01000000  // bpl  r6, 64

//calc eval value
@024c 00110100 10110000  // lui  r4, #b0
@024e 00000001 01000110  // sl8  r1, r2
@0250 00000001 00101001  // sr   r1, r1
@0252 00110101 11000000  // lui  r5, #c0
@0254 00000001 10100100  // add  r1, r5
@0256 00000001 01100100  // add  r1, r3
@0258 00001011 00010000  // lli  r3, 16
//y loop
@025a 00001110 00010000  // lli  r6, 16
//x loop
@025c 00000010 00110011  // lbu  r2, (r1)
@025e 00000101 10010011  // lbu  r5, (r4)
@0260 00000101 01000101  // sub  r5, r2
@0262 10011101 00000110  // bpl  r5, 6
@0264 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0266 00000010 10100010  // not  r2, r5
@0268 00100010 00000001  // addi r2, 1
@026a 00001101 11111111  // lli  r5, #ff
@026c 00000101 01000101  // sub  r5, r2
@026e 00000111 10100100  // add  r7, r5
//update coordinate
@0270 00100001 00000001  // addi r1, 1
@0272 00100100 00000001  // addi r4, 1
@0274 00100110 11111111  // addi r6, -1
@0276 10001110 11100100  // bnez r6, -28
@0278 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@027a 00100001 11110000  // addi r1, -16
@027c 00100011 11111111  // addi r3, -1
@027e 00100001 00000001  // addi r1, 1             //plus (128)
@0280 10001011 11011000  // bnez r3, -40 
@0282 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0284 00000111 11101001  // sr   r7, r7
@0286 00110001 10100000  // lui  r1, #a0
@0288 00100001 00101100  // addi r1, #2c    //add 
@028a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@028c 00000110 11100001  // mov  r6, r7
@028e 00000110 00000101  // sub  r6, r0
@0290 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0292 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0294 00000000 11100001  // mov  r0, r7
@0296 00110011 10100000  // lui  r3, #a0    //add
@0298 00100011 00101000  // addi r3, #28
@029a 00110100 10011000  // lui  r4, #98
@029c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@029e 11000000 00000100  // j 4
@02a0 00000000 00000000  // nop 
@02a2 11000000 10001110  // j -114
//----------6 gene----------

//reset eval value
@02a4 00001111 00000000  // lli  r7, 0
//set eval value
@02a6 00110001 10100000  // lui  r1, #a0    //add 
@02a8 00100001 00110000  // addi  r1, #30
@02aa 00000010 00110011  // lbu  r2, (r1)
@02ac 00100001 00000001  // addi r1, 1
@02ae 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@02b0 00000110 01000001  // mov  r6, r2
@02b2 00100110 10001111  // addi r6, -113
@02b4 10011110 01000110  // bpl  r6, 70
@02b6 00000110 01100001  // mov  r6, r3
@02b8 00100110 10001111  // addi r6, -113
@02ba 10011110 01000000  // bpl  r6, 64

//calc eval value
@02bc 00110100 10110000  // lui  r4, #b0
@02be 00000001 01000110  // sl8  r1, r2
@02c0 00000001 00101001  // sr   r1, r1
@02c2 00110101 11000000  // lui  r5, #c0
@02c4 00000001 10100100  // add  r1, r5
@02c6 00000001 01100100  // add  r1, r3
@02c8 00001011 00010000  // lli  r3, 16
//y loop
@02ca 00001110 00010000  // lli  r6, 16
//x loop
@02cc 00000010 00110011  // lbu  r2, (r1)
@02ce 00000101 10010011  // lbu  r5, (r4)
@02d0 00000101 01000101  // sub  r5, r2
@02d2 10011101 00000110  // bpl  r5, 6
@02d4 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@02d6 00000010 10100010  // not  r2, r5
@02d8 00100010 00000001  // addi r2, 1
@02da 00001101 11111111  // lli  r5, #ff
@02dc 00000101 01000101  // sub  r5, r2
@02de 00000111 10100100  // add  r7, r5
//update coordinate
@02e0 00100001 00000001  // addi r1, 1
@02e2 00100100 00000001  // addi r4, 1
@02e4 00100110 11111111  // addi r6, -1
@02e6 10001110 11100100  // bnez r6, -28
@02e8 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@02ea 00100001 11110000  // addi r1, -16
@02ec 00100011 11111111  // addi r3, -1
@02ee 00100001 00000001  // addi r1, 1             //plus (128)
@02f0 10001011 11011000  // bnez r3, -40 
@02f2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@02f4 00000111 11101001  // sr   r7, r7
@02f6 00110001 10100000  // lui  r1, #a0
@02f8 00100001 00110100  // addi r1, #34    //add 
@02fa 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@02fc 00000110 11100001  // mov  r6, r7
@02fe 00000110 00000101  // sub  r6, r0
@0300 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0302 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0304 00000000 11100001  // mov  r0, r7
@0306 00110011 10100000  // lui  r3, #a0    //add
@0308 00100011 00110000  // addi r3, #30
@030a 00110100 10011000  // lui  r4, #98
@030c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@030e 11000000 00000100  // j 4
@0310 00000000 00000000  // nop 
@0312 11000000 10001110  // j -114
//----------7 gene----------

//reset eval value
@0314 00001111 00000000  // lli  r7, 0
//set eval value
@0316 00110001 10100000  // lui  r1, #a0    //add 
@0318 00100001 00111000  // addi  r1, #38
@031a 00000010 00110011  // lbu  r2, (r1)
@031c 00100001 00000001  // addi r1, 1
@031e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0320 00000110 01000001  // mov  r6, r2
@0322 00100110 10001111  // addi r6, -113
@0324 10011110 01000110  // bpl  r6, 70
@0326 00000110 01100001  // mov  r6, r3
@0328 00100110 10001111  // addi r6, -113
@032a 10011110 01000000  // bpl  r6, 64

//calc eval value
@032c 00110100 10110000  // lui  r4, #b0
@032e 00000001 01000110  // sl8  r1, r2
@0330 00000001 00101001  // sr   r1, r1
@0332 00110101 11000000  // lui  r5, #c0
@0334 00000001 10100100  // add  r1, r5
@0336 00000001 01100100  // add  r1, r3
@0338 00001011 00010000  // lli  r3, 16
//y loop
@033a 00001110 00010000  // lli  r6, 16
//x loop
@033c 00000010 00110011  // lbu  r2, (r1)
@033e 00000101 10010011  // lbu  r5, (r4)
@0340 00000101 01000101  // sub  r5, r2
@0342 10011101 00000110  // bpl  r5, 6
@0344 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0346 00000010 10100010  // not  r2, r5
@0348 00100010 00000001  // addi r2, 1
@034a 00001101 11111111  // lli  r5, #ff
@034c 00000101 01000101  // sub  r5, r2
@034e 00000111 10100100  // add  r7, r5
//update coordinate
@0350 00100001 00000001  // addi r1, 1
@0352 00100100 00000001  // addi r4, 1
@0354 00100110 11111111  // addi r6, -1
@0356 10001110 11100100  // bnez r6, -28
@0358 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@035a 00100001 11110000  // addi r1, -16
@035c 00100011 11111111  // addi r3, -1
@035e 00100001 00000001  // addi r1, 1             //plus (128)
@0360 10001011 11011000  // bnez r3, -40 
@0362 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0364 00000111 11101001  // sr   r7, r7
@0366 00110001 10100000  // lui  r1, #a0
@0368 00100001 00111100  // addi r1, #3c    //add 
@036a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@036c 00000110 11100001  // mov  r6, r7
@036e 00000110 00000101  // sub  r6, r0
@0370 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0372 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0374 00000000 11100001  // mov  r0, r7
@0376 00110011 10100000  // lui  r3, #a0    //add
@0378 00100011 00111000  // addi r3, #38
@037a 00110100 10011000  // lui  r4, #98
@037c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@037e 11000000 00000100  // j 4
@0380 00000000 00000000  // nop 
@0382 11000000 10001110  // j -114
//----------8 gene----------

//reset eval value
@0384 00001111 00000000  // lli  r7, 0
//set eval value
@0386 00110001 10100000  // lui  r1, #a0
@0388 00100001 01000000  // addi  r1, #40    //add 
@038a 00000010 00110011  // lbu  r2, (r1)
@038c 00100001 00000001  // addi r1, 1
@038e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0390 00000110 01000001  // mov  r6, r2
@0392 00100110 10001111  // addi r6, -113
@0394 10011110 01000110  // bpl  r6, 70
@0396 00000110 01100001  // mov  r6, r3
@0398 00100110 10001111  // addi r6, -113
@039a 10011110 01000000  // bpl  r6, 64

//calc eval value
@039c 00110100 10110000  // lui  r4, #b0
@039e 00000001 01000110  // sl8  r1, r2
@03a0 00000001 00101001  // sr   r1, r1
@03a2 00110101 11000000  // lui  r5, #c0
@03a4 00000001 10100100  // add  r1, r5
@03a6 00000001 01100100  // add  r1, r3
@03a8 00001011 00010000  // lli  r3, 16
//y loop
@03aa 00001110 00010000  // lli  r6, 16
//x loop
@03ac 00000010 00110011  // lbu  r2, (r1)
@03ae 00000101 10010011  // lbu  r5, (r4)
@03b0 00000101 01000101  // sub  r5, r2
@03b2 10011101 00000110  // bpl  r5, 6
@03b4 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@03b6 00000010 10100010  // not  r2, r5
@03b8 00100010 00000001  // addi r2, 1
@03ba 00001101 11111111  // lli  r5, #ff
@03bc 00000101 01000101  // sub  r5, r2
@03be 00000111 10100100  // add  r7, r5
//update coordinate
@03c0 00100001 00000001  // addi r1, 1
@03c2 00100100 00000001  // addi r4, 1
@03c4 00100110 11111111  // addi r6, -1
@03c6 10001110 11100100  // bnez r6, -28
@03c8 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@03ca 00100001 11110000  // addi r1, -16
@03cc 00100011 11111111  // addi r3, -1
@03ce 00100001 00000001  // addi r1, 1             //plus (128)
@03d0 10001011 11011000  // bnez r3, -40 
@03d2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@03d4 00000111 11101001  // sr   r7, r7
@03d6 00110001 10100000  // lui  r1, #a0
@03d8 00100001 01000100  // addi r1, #44    //add 
@03da 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@03dc 00000110 11100001  // mov  r6, r7
@03de 00000110 00000101  // sub  r6, r0
@03e0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@03e2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@03e4 00000000 11100001  // mov  r0, r7
@03e6 00110011 10100000  // lui  r3, #a0
@03e8 00100011 01000000  // addi r3, #40    //add
@03ea 00110100 10011000  // lui  r4, #98
@03ec 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@03ee 11000000 00000100  // j 4
@03f0 00000000 00000000  // nop 
@03f2 11000000 10001110  // j -114
//----------9 gene----------

//reset eval value
@03f4 00001111 00000000  // lli  r7, 0
//set eval value
@03f6 00110001 10100000  // lui  r1, #a0
@03f8 00100001 01001000  // addi  r1, #48    //add 
@03fa 00000010 00110011  // lbu  r2, (r1)
@03fc 00100001 00000001  // addi r1, 1
@03fe 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0400 00000110 01000001  // mov  r6, r2
@0402 00100110 10001111  // addi r6, -113
@0404 10011110 01000110  // bpl  r6, 70
@0406 00000110 01100001  // mov  r6, r3
@0408 00100110 10001111  // addi r6, -113
@040a 10011110 01000000  // bpl  r6, 64

//calc eval value
@040c 00110100 10110000  // lui  r4, #b0
@040e 00000001 01000110  // sl8  r1, r2
@0410 00000001 00101001  // sr   r1, r1
@0412 00110101 11000000  // lui  r5, #c0
@0414 00000001 10100100  // add  r1, r5
@0416 00000001 01100100  // add  r1, r3
@0418 00001011 00010000  // lli  r3, 16
//y loop
@041a 00001110 00010000  // lli  r6, 16
//x loop
@041c 00000010 00110011  // lbu  r2, (r1)
@041e 00000101 10010011  // lbu  r5, (r4)
@0420 00000101 01000101  // sub  r5, r2
@0422 10011101 00000110  // bpl  r5, 6
@0424 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0426 00000010 10100010  // not  r2, r5
@0428 00100010 00000001  // addi r2, 1
@042a 00001101 11111111  // lli  r5, #ff
@042c 00000101 01000101  // sub  r5, r2
@042e 00000111 10100100  // add  r7, r5
//update coordinate
@0430 00100001 00000001  // addi r1, 1
@0432 00100100 00000001  // addi r4, 1
@0434 00100110 11111111  // addi r6, -1
@0436 10001110 11100100  // bnez r6, -28
@0438 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@043a 00100001 11110000  // addi r1, -16
@043c 00100011 11111111  // addi r3, -1
@043e 00100001 00000001  // addi r1, 1             //plus (128)
@0440 10001011 11011000  // bnez r3, -40 
@0442 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0444 00000111 11101001  // sr   r7, r7
@0446 00110001 10100000  // lui  r1, #a0
@0448 00100001 01001100  // addi r1, #4c    //add 
@044a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@044c 00000110 11100001  // mov  r6, r7
@044e 00000110 00000101  // sub  r6, r0
@0450 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0452 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0454 00000000 11100001  // mov  r0, r7
@0456 00110011 10100000  // lui  r3, #a0
@0458 00100011 01001000  // addi r3, #48    //add
@045a 00110100 10011000  // lui  r4, #98
@045c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@045e 11000000 00000100  // j 4
@0460 00000000 00000000  // nop 
@0462 11000000 10001110  // j -114
//----------10 gene----------
//reset eval value
@0464 00001111 00000000  // lli  r7, 0
//set eval value
@0466 00110001 10100000  // lui  r1, #a0
@0468 00100001 01010000  // addi  r1, #50    //add 
@046a 00000010 00110011  // lbu  r2, (r1)
@046c 00100001 00000001  // addi r1, 1
@046e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0470 00000110 01000001  // mov  r6, r2
@0472 00100110 10001111  // addi r6, -113
@0474 10011110 01000110  // bpl  r6, 70
@0476 00000110 01100001  // mov  r6, r3
@0478 00100110 10001111  // addi r6, -113
@047a 10011110 01000000  // bpl  r6, 64

//calc eval value
@047c 00110100 10110000  // lui  r4, #b0
@047e 00000001 01000110  // sl8  r1, r2
@0480 00000001 00101001  // sr   r1, r1
@0482 00110101 11000000  // lui  r5, #c0
@0484 00000001 10100100  // add  r1, r5
@0486 00000001 01100100  // add  r1, r3
@0488 00001011 00010000  // lli  r3, 16
//y loop
@048a 00001110 00010000  // lli  r6, 16
//x loop
@048c 00000010 00110011  // lbu  r2, (r1)
@048e 00000101 10010011  // lbu  r5, (r4)
@0490 00000101 01000101  // sub  r5, r2
@0492 10011101 00000110  // bpl  r5, 6
@0494 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0496 00000010 10100010  // not  r2, r5
@0498 00100010 00000001  // addi r2, 1
@049a 00001101 11111111  // lli  r5, #ff
@049c 00000101 01000101  // sub  r5, r2
@049e 00000111 10100100  // add  r7, r5
//update coordinate
@04a0 00100001 00000001  // addi r1, 1
@04a2 00100100 00000001  // addi r4, 1
@04a4 00100110 11111111  // addi r6, -1
@04a6 10001110 11100100  // bnez r6, -28
@04a8 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@04aa 00100001 11110000  // addi r1, -16
@04ac 00100011 11111111  // addi r3, -1
@04ae 00100001 00000001  // addi r1, 1             //plus (128)
@04b0 10001011 11011000  // bnez r3, -40 
@04b2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@04b4 00000111 11101001  // sr   r7, r7
@04b6 00110001 10100000  // lui  r1, #a0
@04b8 00100001 01010100  // addi r1, #54    //add 
@04ba 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@04bc 00000110 11100001  // mov  r6, r7
@04be 00000110 00000101  // sub  r6, r0
@04c0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@04c2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@04c4 00000000 11100001  // mov  r0, r7
@04c6 00110011 10100000  // lui  r3, #a0
@04c8 00100011 01010000  // addi r3, #50    //add
@04ca 00110100 10011000  // lui  r4, #98
@04cc 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@04ce 11000000 00000100  // j 4
@04d0 00000000 00000000  // nop 
@04d2 11000000 10001110  // j -114
//----------11 gene----------

//reset eval value
@04d4 00001111 00000000  // lli  r7, 0
//set eval value
@04d6 00110001 10100000  // lui  r1, #a0
@04d8 00100001 01011000  // addi  r1, #58    //add 
@04da 00000010 00110011  // lbu  r2, (r1)
@04dc 00100001 00000001  // addi r1, 1
@04de 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@04e0 00000110 01000001  // mov  r6, r2
@04e2 00100110 10001111  // addi r6, -113
@04e4 10011110 01000110  // bpl  r6, 70
@04e6 00000110 01100001  // mov  r6, r3
@04e8 00100110 10001111  // addi r6, -113
@04ea 10011110 01000000  // bpl  r6, 64

//calc eval value
@04ec 00110100 10110000  // lui  r4, #b0
@04ee 00000001 01000110  // sl8  r1, r2
@04f0 00000001 00101001  // sr   r1, r1
@04f2 00110101 11000000  // lui  r5, #c0
@04f4 00000001 10100100  // add  r1, r5
@04f6 00000001 01100100  // add  r1, r3
@04f8 00001011 00010000  // lli  r3, 16
//y loop
@04fa 00001110 00010000  // lli  r6, 16
//x loop
@04fc 00000010 00110011  // lbu  r2, (r1)
@04fe 00000101 10010011  // lbu  r5, (r4)
@0500 00000101 01000101  // sub  r5, r2
@0502 10011101 00000110  // bpl  r5, 6
@0504 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0506 00000010 10100010  // not  r2, r5
@0508 00100010 00000001  // addi r2, 1
@050a 00001101 11111111  // lli  r5, #ff
@050c 00000101 01000101  // sub  r5, r2
@050e 00000111 10100100  // add  r7, r5
//update coordinate
@0510 00100001 00000001  // addi r1, 1
@0512 00100100 00000001  // addi r4, 1
@0514 00100110 11111111  // addi r6, -1
@0516 10001110 11100100  // bnez r6, -28
@0518 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@051a 00100001 11110000  // addi r1, -16
@051c 00100011 11111111  // addi r3, -1
@051e 00100001 00000001  // addi r1, 1             //plus (128)
@0520 10001011 11011000  // bnez r3, -40 
@0522 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0524 00000111 11101001  // sr   r7, r7
@0526 00110001 10100000  // lui  r1, #a0
@0528 00100001 01011100  // addi r1, #5c    //add 
@052a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@052c 00000110 11100001  // mov  r6, r7
@052e 00000110 00000101  // sub  r6, r0
@0530 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0532 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0534 00000000 11100001  // mov  r0, r7
@0536 00110011 10100000  // lui  r3, #a0
@0538 00100011 01011000  // addi r3, #58    //add
@053a 00110100 10011000  // lui  r4, #98
@053c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@053e 11000000 00000100  // j 4
@0540 00000000 00000000  // nop 
@0542 11000000 10001110  // j -114
//----------12 gene----------

//reset eval value
@0544 00001111 00000000  // lli  r7, 0
//set eval value
@0546 00110001 10100000  // lui  r1, #a0
@0548 00100001 01100000  // addi  r1, #60    //add 
@054a 00000010 00110011  // lbu  r2, (r1)
@054c 00100001 00000001  // addi r1, 1
@054e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0550 00000110 01000001  // mov  r6, r2
@0552 00100110 10001111  // addi r6, -113
@0554 10011110 01000110  // bpl  r6, 70
@0556 00000110 01100001  // mov  r6, r3
@0558 00100110 10001111  // addi r6, -113
@055a 10011110 01000000  // bpl  r6, 64

//calc eval value
@055c 00110100 10110000  // lui  r4, #b0
@055e 00000001 01000110  // sl8  r1, r2
@0560 00000001 00101001  // sr   r1, r1
@0562 00110101 11000000  // lui  r5, #c0
@0564 00000001 10100100  // add  r1, r5
@0566 00000001 01100100  // add  r1, r3
@0568 00001011 00010000  // lli  r3, 16
//y loop
@056a 00001110 00010000  // lli  r6, 16
//x loop
@056c 00000010 00110011  // lbu  r2, (r1)
@056e 00000101 10010011  // lbu  r5, (r4)
@0570 00000101 01000101  // sub  r5, r2
@0572 10011101 00000110  // bpl  r5, 6
@0574 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0576 00000010 10100010  // not  r2, r5
@0578 00100010 00000001  // addi r2, 1
@057a 00001101 11111111  // lli  r5, #ff
@057c 00000101 01000101  // sub  r5, r2
@057e 00000111 10100100  // add  r7, r5
//update coordinate
@0580 00100001 00000001  // addi r1, 1
@0582 00100100 00000001  // addi r4, 1
@0584 00100110 11111111  // addi r6, -1
@0586 10001110 11100100  // bnez r6, -28
@0588 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@058a 00100001 11110000  // addi r1, -16
@058c 00100011 11111111  // addi r3, -1
@058e 00100001 00000001  // addi r1, 1             //plus (128)
@0590 10001011 11011000  // bnez r3, -40 
@0592 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0594 00000111 11101001  // sr   r7, r7
@0596 00110001 10100000  // lui  r1, #a0
@0598 00100001 01100100  // addi r1, #64   //add 
@059a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@059c 00000110 11100001  // mov  r6, r7
@059e 00000110 00000101  // sub  r6, r0
@05a0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@05a2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@05a4 00000000 11100001  // mov  r0, r7
@05a6 00110011 10100000  // lui  r3, #a0
@05a8 00100011 01100000  // addi r3, #60    //add
@05aa 00110100 10011000  // lui  r4, #98
@05ac 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@05ae 11000000 00000100  // j 4
@05b0 00000000 00000000  // nop 
@05b2 11000000 10001110  // j -114
//----------13 gene----------

//reset eval value
@05b4 00001111 00000000  // lli  r7, 0
//set eval value
@05b6 00110001 10100000  // lui  r1, #a0
@05b8 00100001 01101000  // addi  r1, #68    //add 
@05ba 00000010 00110011  // lbu  r2, (r1)
@05bc 00100001 00000001  // addi r1, 1
@05be 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@05c0 00000110 01000001  // mov  r6, r2
@05c2 00100110 10001111  // addi r6, -113
@05c4 10011110 01000110  // bpl  r6, 70
@05c6 00000110 01100001  // mov  r6, r3
@05c8 00100110 10001111  // addi r6, -113
@05ca 10011110 01000000  // bpl  r6, 64

//calc eval value
@05cc 00110100 10110000  // lui  r4, #b0
@05ce 00000001 01000110  // sl8  r1, r2
@05d0 00000001 00101001  // sr   r1, r1
@05d2 00110101 11000000  // lui  r5, #c0
@05d4 00000001 10100100  // add  r1, r5
@05d6 00000001 01100100  // add  r1, r3
@05d8 00001011 00010000  // lli  r3, 16
//y loop
@05da 00001110 00010000  // lli  r6, 16
//x loop
@05dc 00000010 00110011  // lbu  r2, (r1)
@05de 00000101 10010011  // lbu  r5, (r4)
@05e0 00000101 01000101  // sub  r5, r2
@05e2 10011101 00000110  // bpl  r5, 6
@05e4 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@05e6 00000010 10100010  // not  r2, r5
@05e8 00100010 00000001  // addi r2, 1
@05ea 00001101 11111111  // lli  r5, #ff
@05ec 00000101 01000101  // sub  r5, r2
@05ee 00000111 10100100  // add  r7, r5
//update coordinate
@05f0 00100001 00000001  // addi r1, 1
@05f2 00100100 00000001  // addi r4, 1
@05f4 00100110 11111111  // addi r6, -1
@05f6 10001110 11100100  // bnez r6, -28
@05f8 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@05fa 00100001 11110000  // addi r1, -16
@05fc 00100011 11111111  // addi r3, -1
@05fe 00100001 00000001  // addi r1, 1             //plus (128)
@0600 10001011 11011000  // bnez r3, -40 
@0602 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0604 00000111 11101001  // sr   r7, r7
@0606 00110001 10100000  // lui  r1, #a0
@0608 00100001 01101100  // addi r1, #6c   //add 
@060a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@060c 00000110 11100001  // mov  r6, r7
@060e 00000110 00000101  // sub  r6, r0
@0610 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0612 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0614 00000000 11100001  // mov  r0, r7
@0616 00110011 10100000  // lui  r3, #a0
@0618 00100011 01101000  // addi r3, #68    //add
@061a 00110100 10011000  // lui  r4, #98
@061c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@061e 11000000 00000100  // j 4
@0620 00000000 00000000  // nop 
@0622 11000000 10001110  // j -114
//----------14 gene----------

//reset eval value
@0624 00001111 00000000  // lli  r7, 0
//set eval value
@0626 00110001 10100000  // lui  r1, #a0
@0628 00100001 01110000  // addi  r1, #70    //add 
@062a 00000010 00110011  // lbu  r2, (r1)
@062c 00100001 00000001  // addi r1, 1
@062e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0630 00000110 01000001  // mov  r6, r2
@0632 00100110 10001111  // addi r6, -113
@0634 10011110 01000110  // bpl  r6, 70
@0636 00000110 01100001  // mov  r6, r3
@0638 00100110 10001111  // addi r6, -113
@063a 10011110 01000000  // bpl  r6, 64

//calc eval value
@063c 00110100 10110000  // lui  r4, #b0
@063e 00000001 01000110  // sl8  r1, r2
@0640 00000001 00101001  // sr   r1, r1
@0642 00110101 11000000  // lui  r5, #c0
@0644 00000001 10100100  // add  r1, r5
@0646 00000001 01100100  // add  r1, r3
@0648 00001011 00010000  // lli  r3, 16
//y loop
@064a 00001110 00010000  // lli  r6, 16
//x loop
@064c 00000010 00110011  // lbu  r2, (r1)
@064e 00000101 10010011  // lbu  r5, (r4)
@0650 00000101 01000101  // sub  r5, r2
@0652 10011101 00000110  // bpl  r5, 6
@0654 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0656 00000010 10100010  // not  r2, r5
@0658 00100010 00000001  // addi r2, 1
@065a 00001101 11111111  // lli  r5, #ff
@065c 00000101 01000101  // sub  r5, r2
@065e 00000111 10100100  // add  r7, r5
//update coordinate
@0660 00100001 00000001  // addi r1, 1
@0662 00100100 00000001  // addi r4, 1
@0664 00100110 11111111  // addi r6, -1
@0666 10001110 11100100  // bnez r6, -28
@0668 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@066a 00100001 11110000  // addi r1, -16
@066c 00100011 11111111  // addi r3, -1
@066e 00100001 00000001  // addi r1, 1             //plus (128)
@0670 10001011 11011000  // bnez r3, -40 
@0672 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0674 00000111 11101001  // sr   r7, r7
@0676 00110001 10100000  // lui  r1, #a0
@0678 00100001 01110100  // addi r1, #74   //add 
@067a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@067c 00000110 11100001  // mov  r6, r7
@067e 00000110 00000101  // sub  r6, r0
@0680 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0682 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0684 00000000 11100001  // mov  r0, r7
@0686 00110011 10100000  // lui  r3, #a0
@0688 00100011 01110000  // addi r3, #70    //add
@068a 00110100 10011000  // lui  r4, #98
@068c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------
@068e 11000000 00000100  // j 4
@0690 00000000 00000000  // nop 
@0692 11000000 10001110  // j -114
//----------15 gene----------

//reset eval value
@0694 00001111 00000000  // lli  r7, 0
//set eval value
@0696 00110001 10100000  // lui  r1, #a0
@0698 00100001 01111000  // addi  r1, #78    //add 
@069a 00000010 00110011  // lbu  r2, (r1)
@069c 00100001 00000001  // addi r1, 1
@069e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@06a0 00000110 01000001  // mov  r6, r2
@06a2 00100110 10001111  // addi r6, -113
@06a4 10011110 01000110  // bpl  r6, 70
@06a6 00000110 01100001  // mov  r6, r3
@06a8 00100110 10001111  // addi r6, -113
@06aa 10011110 01000000  // bpl  r6, 64

//calc eval value
@06ac 00110100 10110000  // lui  r4, #b0
@06ae 00000001 01000110  // sl8  r1, r2
@06b0 00000001 00101001  // sr   r1, r1
@06b2 00110101 11000000  // lui  r5, #c0
@06b4 00000001 10100100  // add  r1, r5
@06b6 00000001 01100100  // add  r1, r3
@06b8 00001011 00010000  // lli  r3, 16
//y loop
@06ba 00001110 00010000  // lli  r6, 16
//x loop
@06bc 00000010 00110011  // lbu  r2, (r1)
@06be 00000101 10010011  // lbu  r5, (r4)
@06c0 00000101 01000101  // sub  r5, r2
@06c2 10011101 00000110  // bpl  r5, 6
@06c4 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@06c6 00000010 10100010  // not  r2, r5
@06c8 00100010 00000001  // addi r2, 1
@06ca 00001101 11111111  // lli  r5, #ff
@06cc 00000101 01000101  // sub  r5, r2
@06ce 00000111 10100100  // add  r7, r5
//update coordinate
@06d0 00100001 00000001  // addi r1, 1
@06d2 00100100 00000001  // addi r4, 1
@06d4 00100110 11111111  // addi r6, -1
@06d6 10001110 11100100  // bnez r6, -28
@06d8 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@06da 00100001 11110000  // addi r1, -16
@06dc 00100011 11111111  // addi r3, -1
@06de 00100001 00000001  // addi r1, 1             //plus (128)
@06e0 10001011 11011000  // bnez r3, -40 
@06e2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@06e4 00000111 11101001  // sr   r7, r7
@06e6 00110001 10100000  // lui  r1, #a0
@06e8 00100001 01111100  // addi r1, #7c   //add 
@06ea 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@06ec 00000110 11100001  // mov  r6, r7
@06ee 00000110 00000101  // sub  r6, r0
@06f0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@06f2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@06f4 00000000 11100001  // mov  r0, r7
@06f6 00110011 10100000  // lui  r3, #a0
@06f8 00100011 01111000  // addi r3, #78    //add
@06fa 00110100 10011000  // lui  r4, #98
@06fc 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------


//#################################################################

@06fe 11000000 00000100  // j 4
@0700 00000000 00000000  // nop
@0702 11000000 10001110  // j -114


//#########################calc eval value#########################
//       /*
//       r0: tmp
//       r1:best gene addr
//       r2: best gene 
//       r3:best gene cross parameter
//       r4:gene addr
//       r5:gene value
//       r6:gene cross parameter
//       r7:

//     */

//-------set best gene-------
@0704 00110000 10011000  // lui  r0, #98
@0706 00000001 00010001  // lw   r1, (r0)
@0708 00000010 00110001  // lw   r2, (r1)
@070a 00000000 00100001  // mov  r0, r1
@070c 00100000 00000010  // addi r0, 2
@070e 00000011 00010001  // lw   r3, (r0)   
//---------------------------
@0710 11000000 00000100  // j 4
@0712 00000000 00000000  // nop
@0714 11000000 11101100  // j -20
//----------0 gene----------

//set gene addr
@0716 00110100 10100000  // lui  r4, #a0
@0718 00100100 00000000  // addi r4, #00        //add
//check: is best gene
@071a 00000000 00100001  // mov  r0, r1
@071c 00000000 10000101  // sub  r0, r4
@071e 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0720 00000101 10010001  // lw   r5, (r4)
@0722 00000000 10000001  // mov  r0, r4
@0724 00100000 00000010  // addi r0, 2
@0726 00000110 00010001  // lw   r6, (r0)
//cross over
@0728 00000111 11000010  // not  r7, r6
@072a 00000111 01001010  // and  r7, r2
@072c 00000000 10100001  // mov  r0, r5
@072e 00000000 11001010  // and  r0, r6
@0730 00000111 00001011  // or   r7, r0

@0732 00000000 11100001  // mov  r0, r7
@0734 00000000 10100101  // sub  r0, r5
@0736 10001000 00001010  // bnez r0, 10
//mitation
@0738 00000101 10100010  // not  r5, r5
@073a 00000111 11000010  // not  r7, r6
@073c 00000111 01001010  // and  r7, r2
@073e 00000101 11001010  // and  r5, r6
@0740 00000111 10101011  // or   r7, r5
//write new gene
@0742 00000111 10010000  // sw   r7, (r4)
@0744 00100100 00000010  // addi r4, 2
//update cross parameter
@0746 00000110 01100011  // xor  r6, r3
@0748 00110000 11111100  // lui  r0, #fc
@074a 00001111 10101011  // lli  r7, #ab
@074c 00000000 11100100  // add  r0, r7
@074e 00000110 00000100  // add  r6, r0
@0750 00110000 01111111  // lui  r0, #7f
@0752 00100000 01111111  // addi r0, #7f
@0754 00000110 00001010  // and  r6, r0
@0756 00000110 10010000  // sw   r6, (r4)

//--------------------------
@0758 11000000 00000100  // j 4
@075a 00000000 00000000  // nop
@075c 11000000 10110110  // j -74
//----------1 gene----------

//set gene addr
@075e 00110100 10100000  // lui  r4, #a0
@0760 00100100 00001000  // addi r4, #08        //add
//check: is best gene
@0762 00000000 00100001  // mov  r0, r1
@0764 00000000 10000101  // sub  r0, r4
@0766 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0768 00000101 10010001  // lw   r5, (r4)
@076a 00000000 10000001  // mov  r0, r4
@076c 00100000 00000010  // addi r0, 2
@076e 00000110 00010001  // lw   r6, (r0)
//cross over
@0770 00000111 11000010  // not  r7, r6
@0772 00000111 01001010  // and  r7, r2
@0774 00000000 10100001  // mov  r0, r5
@0776 00000000 11001010  // and  r0, r6
@0778 00000111 00001011  // or   r7, r0

@077a 00000000 11100001  // mov  r0, r7
@077c 00000000 10100101  // sub  r0, r5
@077e 10001000 00001010  // bnez r0, 10
//mitation
@0780 00000101 10100010  // not  r5, r5
@0782 00000111 11000010  // not  r7, r6
@0784 00000111 01001010  // and  r7, r2
@0786 00000101 11001010  // and  r5, r6
@0788 00000111 10101011  // or   r7, r5
//write new gene
@078a 00000111 10010000  // sw   r7, (r4)
@078c 00100100 00000010  // addi r4, 2
//update cross parameter
@078e 00000110 01100011  // xor  r6, r3
@0790 00110000 11111100  // lui  r0, #fc
@0792 00001111 10101011  // lli  r7, #ab
@0794 00000000 11100100  // add  r0,r7
@0796 00000110 00000100  // add  r6, r0
@0798 00110000 01111111  // lui  r0, #7f
@079a 00100000 01111111  // addi r0, #7f
@079c 00000110 00001010  // and  r6, r0
@079e 00000110 10010000  // sw   r6, (r4)

//--------------------------
@07a0 11000000 00000100  // j 4
@07a2 00000000 00000000  // nop
@07a4 11000000 10110110  // j -74
//----------2 gene----------

//set gene addr
@07a6 00110100 10100000  // lui  r4, #a0
@07a8 00100100 00010000  // addi r4, #10       //add
//check: is best gene
@07aa 00000000 00100001  // mov  r0, r1
@07ac 00000000 10000101  // sub  r0, r4
@07ae 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@07b0 00000101 10010001  // lw   r5, (r4)
@07b2 00000000 10000001  // mov  r0, r4
@07b4 00100000 00000010  // addi r0, 2
@07b6 00000110 00010001  // lw   r6, (r0)
//cross over
@07b8 00000111 11000010  // not  r7, r6
@07ba 00000111 01001010  // and  r7, r2
@07bc 00000000 10100001  // mov  r0, r5
@07be 00000000 11001010  // and  r0, r6
@07c0 00000111 00001011  // or   r7, r0

@07c2 00000000 11100001  // mov  r0, r7
@07c4 00000000 10100101  // sub  r0, r5
@07c6 10001000 00001010  // bnez r0, 10
//mitation
@07c8 00000101 10100010  // not  r5, r5
@07ca 00000111 11000010  // not  r7, r6
@07cc 00000111 01001010  // and  r7, r2
@07ce 00000101 11001010  // and  r5, r6
@07d0 00000111 10101011  // or   r7, r5
//write new gene
@07d2 00000111 10010000  // sw   r7, (r4)
@07d4 00100100 00000010  // addi r4, 2
//update cross parameter
@07d6 00000110 01100011  // xor  r6, r3
@07d8 00110000 11111100  // lui  r0, #fc
@07da 00001111 10101011  // lli  r7, #ab
@07dc 00000000 11100100  // add  r0,r7
@07de 00000110 00000100  // add  r6, r0
@07e0 00110000 01111111  // lui  r0, #7f
@07e2 00100000 01111111  // addi r0, #7f
@07e4 00000110 00001010  // and  r6, r0
@07e6 00000110 10010000  // sw   r6, (r4)

//--------------------------
@07e8 11000000 00000100  // j 4
@07ea 00000000 00000000  // nop
@07ec 11000000 10110110  // j -74
//----------3 gene----------

//set gene addr
@07ee 00110100 10100000  // lui  r4, #a0
@07f0 00100100 00011000  // addi r4, #18       //add
//check: is best gene
@07f2 00000000 00100001  // mov  r0, r1
@07f4 00000000 10000101  // sub  r0, r4
@07f6 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@07f8 00000101 10010001  // lw   r5, (r4)
@07fa 00000000 10000001  // mov  r0, r4
@07fc 00100000 00000010  // addi r0, 2
@07fe 00000110 00010001  // lw   r6, (r0)
//cross over
@0800 00000111 11000010  // not  r7, r6
@0802 00000111 01001010  // and  r7, r2
@0804 00000000 10100001  // mov  r0, r5
@0806 00000000 11001010  // and  r0, r6
@0808 00000111 00001011  // or   r7, r0

@080a 00000000 11100001  // mov  r0, r7
@080c 00000000 10100101  // sub  r0, r5
@080e 10001000 00001010  // bnez r0, 10
//mitation
@0810 00000101 10100010  // not  r5, r5
@0812 00000111 11000010  // not  r7, r6
@0814 00000111 01001010  // and  r7, r2
@0816 00000101 11001010  // and  r5, r6
@0818 00000111 10101011  // or   r7, r5
//write new gene
@081a 00000111 10010000  // sw   r7, (r4)
@081c 00100100 00000010  // addi r4, 2
//update cross parameter
@081e 00000110 01100011  // xor  r6, r3
@0820 00110000 11111100  // lui  r0, #fc
@0822 00001111 10101011  // lli  r7, #ab
@0824 00000000 11100100  // add  r0,r7
@0826 00000110 00000100  // add  r6, r0
@0828 00110000 01111111  // lui  r0, #7f
@082a 00100000 01111111  // addi r0, #7f
@082c 00000110 00001010  // and  r6, r0
@082e 00000110 10010000  // sw   r6, (r4)

//--------------------------
@0830 11000000 00000100  // j 4
@0832 00000000 00000000  // nop
@0834 11000000 10110110  // j -74
//----------4 gene----------

//set gene addr
@0836 00110100 10100000  // lui  r4, #a0
@0838 00100100 00100000  // addi r4, #20       //add
//check: is best gene
@083a 00000000 00100001  // mov  r0, r1
@083c 00000000 10000101  // sub  r0, r4
@083e 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0840 00000101 10010001  // lw   r5, (r4)
@0842 00000000 10000001  // mov  r0, r4
@0844 00100000 00000010  // addi r0, 2
@0846 00000110 00010001  // lw   r6, (r0)
//cross over
@0848 00000111 11000010  // not  r7, r6
@084a 00000111 01001010  // and  r7, r2
@084c 00000000 10100001  // mov  r0, r5
@084e 00000000 11001010  // and  r0, r6
@0850 00000111 00001011  // or   r7, r0

@0852 00000000 11100001  // mov  r0, r7
@0854 00000000 10100101  // sub  r0, r5
@0856 10001000 00001010  // bnez r0, 10
//mitation
@0858 00000101 10100010  // not  r5, r5
@085a 00000111 11000010  // not  r7, r6
@085c 00000111 01001010  // and  r7, r2
@085e 00000101 11001010  // and  r5, r6
@0860 00000111 10101011  // or   r7, r5
//write new gene
@0862 00000111 10010000  // sw   r7, (r4)
@0864 00100100 00000010  // addi r4, 2
//update cross parameter
@0866 00000110 01100011  // xor  r6, r3
@0868 00110000 11111100  // lui  r0, #fc
@086a 00001111 10101011  // lli  r7, #ab
@086c 00000000 11100100  // add  r0,r7
@086e 00000110 00000100  // add  r6, r0
@0870 00110000 01111111  // lui  r0, #7f
@0872 00100000 01111111  // addi r0, #7f
@0874 00000110 00001010  // and  r6, r0
@0876 00000110 10010000  // sw   r6, (r4)

//--------------------------
@0878 11000000 00000100  // j 4
@087a 00000000 00000000  // nop
@087c 11000000 10110110  // j -74
//----------5 gene----------

//set gene addr
@087e 00110100 10100000  // lui  r4, #a0
@0880 00100100 00101000  // addi r4, #28       //add
//check: is best gene
@0882 00000000 00100001  // mov  r0, r1
@0884 00000000 10000101  // sub  r0, r4
@0886 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0888 00000101 10010001  // lw   r5, (r4)
@088a 00000000 10000001  // mov  r0, r4
@088c 00100000 00000010  // addi r0, 2
@088e 00000110 00010001  // lw   r6, (r0)
//cross over
@0890 00000111 11000010  // not  r7, r6
@0892 00000111 01001010  // and  r7, r2
@0894 00000000 10100001  // mov  r0, r5
@0896 00000000 11001010  // and  r0, r6
@0898 00000111 00001011  // or   r7, r0

@089a 00000000 11100001  // mov  r0, r7
@089c 00000000 10100101  // sub  r0, r5
@089e 10001000 00001010  // bnez r0, 10
//mitation
@08a0 00000101 10100010  // not  r5, r5
@08a2 00000111 11000010  // not  r7, r6
@08a4 00000111 01001010  // and  r7, r2
@08a6 00000101 11001010  // and  r5, r6
@08a8 00000111 10101011  // or   r7, r5
//write new gene
@08aa 00000111 10010000  // sw   r7, (r4)
@08ac 00100100 00000010  // addi r4, 2
//update cross parameter
@08ae 00000110 01100011  // xor  r6, r3
@08b0 00110000 11111100  // lui  r0, #fc
@08b2 00001111 10101011  // lli  r7, #ab
@08b4 00000000 11100100  // add  r0,r7
@08b6 00000110 00000100  // add  r6, r0
@08b8 00110000 01111111  // lui  r0, #7f
@08ba 00100000 01111111  // addi r0, #7f
@08bc 00000110 00001010  // and  r6, r0
@08be 00000110 10010000  // sw   r6, (r4)

//--------------------------
@08c0 11000000 00000100  // j 4
@08c2 00000000 00000000  // nop
@08c4 11000000 10110110  // j -74
//----------6 gene----------

//set gene addr
@08c6 00110100 10100000  // lui  r4, #a0
@08c8 00100100 00110000  // addi r4, #30       //add
//check: is best gene
@08ca 00000000 00100001  // mov  r0, r1
@08cc 00000000 10000101  // sub  r0, r4
@08ce 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@08d0 00000101 10010001  // lw   r5, (r4)
@08d2 00000000 10000001  // mov  r0, r4
@08d4 00100000 00000010  // addi r0, 2
@08d6 00000110 00010001  // lw   r6, (r0)
//cross over
@08d8 00000111 11000010  // not  r7, r6
@08da 00000111 01001010  // and  r7, r2
@08dc 00000000 10100001  // mov  r0, r5
@08de 00000000 11001010  // and  r0, r6
@08e0 00000111 00001011  // or   r7, r0

@08e2 00000000 11100001  // mov  r0, r7
@08e4 00000000 10100101  // sub  r0, r5
@08e6 10001000 00001010  // bnez r0, 10
//mitation
@08e8 00000101 10100010  // not  r5, r5
@08ea 00000111 11000010  // not  r7, r6
@08ec 00000111 01001010  // and  r7, r2
@08ee 00000101 11001010  // and  r5, r6
@08f0 00000111 10101011  // or   r7, r5
//write new gene
@08f2 00000111 10010000  // sw   r7, (r4)
@08f4 00100100 00000010  // addi r4, 2
//update cross parameter
@08f6 00000110 01100011  // xor  r6, r3
@08f8 00110000 11111100  // lui  r0, #fc
@08fa 00001111 10101011  // lli  r7, #ab
@08fc 00000000 11100100  // add  r0,r7
@08fe 00000110 00000100  // add  r6, r0
@0900 00110000 01111111  // lui  r0, #7f
@0902 00100000 01111111  // addi r0, #7f
@0904 00000110 00001010  // and  r6, r0
@0906 00000110 10010000  // sw   r6, (r4)

//--------------------------
@0908 11000000 00000100  // j 4
@090a 00000000 00000000  // nop
@090c 11000000 10110110  // j -74
//----------7 gene----------

//set gene addr
@090e 00110100 10100000  // lui  r4, #a0
@0910 00100100 00111000  // addi r4, #38       //add
//check: is best gene
@0912 00000000 00100001  // mov  r0, r1
@0914 00000000 10000101  // sub  r0, r4
@0916 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0918 00000101 10010001  // lw   r5, (r4)
@091a 00000000 10000001  // mov  r0, r4
@091c 00100000 00000010  // addi r0, 2
@091e 00000110 00010001  // lw   r6, (r0)
//cross over
@0920 00000111 11000010  // not  r7, r6
@0922 00000111 01001010  // and  r7, r2
@0924 00000000 10100001  // mov  r0, r5
@0926 00000000 11001010  // and  r0, r6
@0928 00000111 00001011  // or   r7, r0

@092a 00000000 11100001  // mov  r0, r7
@092c 00000000 10100101  // sub  r0, r5
@092e 10001000 00001010  // bnez r0, 10
//mitation
@0930 00000101 10100010  // not  r5, r5
@0932 00000111 11000010  // not  r7, r6
@0934 00000111 01001010  // and  r7, r2
@0936 00000101 11001010  // and  r5, r6
@0938 00000111 10101011  // or   r7, r5
//write new gene
@093a 00000111 10010000  // sw   r7, (r4)
@093c 00100100 00000010  // addi r4, 2
//update cross parameter
@093e 00000110 01100011  // xor  r6, r3
@0940 00110000 11111100  // lui  r0, #fc
@0942 00001111 10101011  // lli  r7, #ab
@0944 00000000 11100100  // add  r0,r7
@0946 00000110 00000100  // add  r6, r0
@0948 00110000 01111111  // lui  r0, #7f
@094a 00100000 01111111  // addi r0, #7f
@094c 00000110 00001010  // and  r6, r0
@094e 00000110 10010000  // sw   r6, (r4)

//--------------------------
@0950 11000000 00000100  // j 4
@0952 00000000 00000000  // nop
@0954 11000000 10110110  // j -74
//----------8 gene----------

//set gene addr
@0956 00110100 10100000  // lui  r4, #a0
@0958 00100100 01000000  // addi r4, #40       //add
//check: is best gene
@095a 00000000 00100001  // mov  r0, r1
@095c 00000000 10000101  // sub  r0, r4
@095e 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0960 00000101 10010001  // lw   r5, (r4)
@0962 00000000 10000001  // mov  r0, r4
@0964 00100000 00000010  // addi r0, 2
@0966 00000110 00010001  // lw   r6, (r0)
//cross over
@0968 00000111 11000010  // not  r7, r6
@096a 00000111 01001010  // and  r7, r2
@096c 00000000 10100001  // mov  r0, r5
@096e 00000000 11001010  // and  r0, r6
@0970 00000111 00001011  // or   r7, r0

@0972 00000000 11100001  // mov  r0, r7
@0974 00000000 10100101  // sub  r0, r5
@0976 10001000 00001010  // bnez r0, 10
//mitation
@0978 00000101 10100010  // not  r5, r5
@097a 00000111 11000010  // not  r7, r6
@097c 00000111 01001010  // and  r7, r2
@097e 00000101 11001010  // and  r5, r6
@0980 00000111 10101011  // or   r7, r5
//write new gene
@0982 00000111 10010000  // sw   r7, (r4)
@0984 00100100 00000010  // addi r4, 2
//update cross parameter
@0986 00000110 01100011  // xor  r6, r3
@0988 00110000 11111100  // lui  r0, #fc
@098a 00001111 10101011  // lli  r7, #ab
@098c 00000000 11100100  // add  r0,r7
@098e 00000110 00000100  // add  r6, r0
@0990 00110000 01111111  // lui  r0, #7f
@0992 00100000 01111111  // addi r0, #7f
@0994 00000110 00001010  // and  r6, r0
@0996 00000110 10010000  // sw   r6, (r4)

//--------------------------
@0998 11000000 00000100  // j 4
@099a 00000000 00000000  // nop
@099c 11000000 10110110  // j -74
//----------9 gene----------

//set gene addr
@099e 00110100 10100000  // lui  r4, #a0
@09a0 00100100 01001000  // addi r4, #48       //add
//check: is best gene
@09a2 00000000 00100001  // mov  r0, r1
@09a4 00000000 10000101  // sub  r0, r4
@09a6 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@09a8 00000101 10010001  // lw   r5, (r4)
@09aa 00000000 10000001  // mov  r0, r4
@09ac 00100000 00000010  // addi r0, 2
@09ae 00000110 00010001  // lw   r6, (r0)
//cross over
@09b0 00000111 11000010  // not  r7, r6
@09b2 00000111 01001010  // and  r7, r2
@09b4 00000000 10100001  // mov  r0, r5
@09b6 00000000 11001010  // and  r0, r6
@09b8 00000111 00001011  // or   r7, r0

@09ba 00000000 11100001  // mov  r0, r7
@09bc 00000000 10100101  // sub  r0, r5
@09be 10001000 00001010  // bnez r0, 10
//mitation
@09c0 00000101 10100010  // not  r5, r5
@09c2 00000111 11000010  // not  r7, r6
@09c4 00000111 01001010  // and  r7, r2
@09c6 00000101 11001010  // and  r5, r6
@09c8 00000111 10101011  // or   r7, r5
//write new gene
@09ca 00000111 10010000  // sw   r7, (r4)
@09cc 00100100 00000010  // addi r4, 2
//update cross parameter
@09ce 00000110 01100011  // xor  r6, r3
@09d0 00110000 11111100  // lui  r0, #fc
@09d2 00001111 10101011  // lli  r7, #ab
@09d4 00000000 11100100  // add  r0,r7
@09d6 00000110 00000100  // add  r6, r0
@09d8 00110000 01111111  // lui  r0, #7f
@09da 00100000 01111111  // addi r0, #7f
@09dc 00000110 00001010  // and  r6, r0
@09de 00000110 10010000  // sw   r6, (r4)

//--------------------------
@09e0 11000000 00000100  // j 4
@09e2 00000000 00000000  // nop
@09e4 11000000 10110110  // j -74
//----------10 gene----------

//set gene addr
@09e6 00110100 10100000  // lui  r4, #a0
@09e8 00100100 01010000  // addi r4, #50       //add
//check: is best gene
@09ea 00000000 00100001  // mov  r0, r1
@09ec 00000000 10000101  // sub  r0, r4
@09ee 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@09f0 00000101 10010001  // lw   r5, (r4)
@09f2 00000000 10000001  // mov  r0, r4
@09f4 00100000 00000010  // addi r0, 2
@09f6 00000110 00010001  // lw   r6, (r0)
//cross over
@09f8 00000111 11000010  // not  r7, r6
@09fa 00000111 01001010  // and  r7, r2
@09fc 00000000 10100001  // mov  r0, r5
@09fe 00000000 11001010  // and  r0, r6
@0a00 00000111 00001011  // or   r7, r0

@0a02 00000000 11100001  // mov  r0, r7
@0a04 00000000 10100101  // sub  r0, r5
@0a06 10001000 00001010  // bnez r0, 10
//mitation
@0a08 00000101 10100010  // not  r5, r5
@0a0a 00000111 11000010  // not  r7, r6
@0a0c 00000111 01001010  // and  r7, r2
@0a0e 00000101 11001010  // and  r5, r6
@0a10 00000111 10101011  // or   r7, r5
//write new gene
@0a12 00000111 10010000  // sw   r7, (r4)
@0a14 00100100 00000010  // addi r4, 2
//update cross parameter
@0a16 00000110 01100011  // xor  r6, r3
@0a18 00110000 11111100  // lui  r0, #fc
@0a1a 00001111 10101011  // lli  r7, #ab
@0a1c 00000000 11100100  // add  r0,r7
@0a1e 00000110 00000100  // add  r6, r0
@0a20 00110000 01111111  // lui  r0, #7f
@0a22 00100000 01111111  // addi r0, #7f
@0a24 00000110 00001010  // and  r6, r0
@0a26 00000110 10010000  // sw   r6, (r4)

//---------------------------
@0a28 11000000 00000100  // j 4
@0a2a 00000000 00000000  // nop
@0a2c 11000000 10110110  // j -74
//----------11 gene----------

//set gene addr
@0a2e 00110100 10100000  // lui  r4, #a0
@0a30 00100100 01011000  // addi r4, #58       //add
//check: is best gene
@0a32 00000000 00100001  // mov  r0, r1
@0a34 00000000 10000101  // sub  r0, r4
@0a36 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0a38 00000101 10010001  // lw   r5, (r4)
@0a3a 00000000 10000001  // mov  r0, r4
@0a3c 00100000 00000010  // addi r0, 2
@0a3e 00000110 00010001  // lw   r6, (r0)
//cross over
@0a40 00000111 11000010  // not  r7, r6
@0a42 00000111 01001010  // and  r7, r2
@0a44 00000000 10100001  // mov  r0, r5
@0a46 00000000 11001010  // and  r0, r6
@0a48 00000111 00001011  // or   r7, r0

@0a4a 00000000 11100001  // mov  r0, r7
@0a4c 00000000 10100101  // sub  r0, r5
@0a4e 10001000 00001010  // bnez r0, 10
//mitation
@0a50 00000101 10100010  // not  r5, r5
@0a52 00000111 11000010  // not  r7, r6
@0a54 00000111 01001010  // and  r7, r2
@0a56 00000101 11001010  // and  r5, r6
@0a58 00000111 10101011  // or   r7, r5
//write new gene
@0a5a 00000111 10010000  // sw   r7, (r4)
@0a5c 00100100 00000010  // addi r4, 2
//update cross parameter
@0a5e 00000110 01100011  // xor  r6, r3
@0a60 00110000 11111100  // lui  r0, #fc
@0a62 00001111 10101011  // lli  r7, #ab
@0a64 00000000 11100100  // add  r0,r7
@0a66 00000110 00000100  // add  r6, r0
@0a68 00110000 01111111  // lui  r0, #7f
@0a6a 00100000 01111111  // addi r0, #7f
@0a6c 00000110 00001010  // and  r6, r0
@0a6e 00000110 10010000  // sw   r6, (r4)

//---------------------------
@0a70 11000000 00000100  // j 4
@0a72 00000000 00000000  // nop
@0a74 11000000 10110110  // j -74
//----------12 gene----------

//set gene addr
@0a76 00110100 10100000  // lui  r4, #a0
@0a78 00100100 01100000  // addi r4, #60       //add
//check: is best gene
@0a7a 00000000 00100001  // mov  r0, r1
@0a7c 00000000 10000101  // sub  r0, r4
@0a7e 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0a80 00000101 10010001  // lw   r5, (r4)
@0a82 00000000 10000001  // mov  r0, r4
@0a84 00100000 00000010  // addi r0, 2
@0a86 00000110 00010001  // lw   r6, (r0)
//cross over
@0a88 00000111 11000010  // not  r7, r6
@0a8a 00000111 01001010  // and  r7, r2
@0a8c 00000000 10100001  // mov  r0, r5
@0a8e 00000000 11001010  // and  r0, r6
@0a90 00000111 00001011  // or   r7, r0

@0a92 00000000 11100001  // mov  r0, r7
@0a94 00000000 10100101  // sub  r0, r5
@0a96 10001000 00001010  // bnez r0, 10
//mitation
@0a98 00000101 10100010  // not  r5, r5
@0a9a 00000111 11000010  // not  r7, r6
@0a9c 00000111 01001010  // and  r7, r2
@0a9e 00000101 11001010  // and  r5, r6
@0aa0 00000111 10101011  // or   r7, r5
//write new gene
@0aa2 00000111 10010000  // sw   r7, (r4)
@0aa4 00100100 00000010  // addi r4, 2
//update cross parameter
@0aa6 00000110 01100011  // xor  r6, r3
@0aa8 00110000 11111100  // lui  r0, #fc
@0aaa 00001111 10101011  // lli  r7, #ab
@0aac 00000000 11100100  // add  r0,r7
@0aae 00000110 00000100  // add  r6, r0
@0ab0 00110000 01111111  // lui  r0, #7f
@0ab2 00100000 01111111  // addi r0, #7f
@0ab4 00000110 00001010  // and  r6, r0
@0ab6 00000110 10010000  // sw   r6, (r4)

//---------------------------
@0ab8 11000000 00000100  // j 4
@0aba 00000000 00000000  // nop
@0abc 11000000 10110110  // j -74
//----------13 gene----------

//set gene addr
@0abe 00110100 10100000  // lui  r4, #a0
@0ac0 00100100 01101000  // addi r4, #68       //add
//check: is best gene
@0ac2 00000000 00100001  // mov  r0, r1
@0ac4 00000000 10000101  // sub  r0, r4
@0ac6 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0ac8 00000101 10010001  // lw   r5, (r4)
@0aca 00000000 10000001  // mov  r0, r4
@0acc 00100000 00000010  // addi r0, 2
@0ace 00000110 00010001  // lw   r6, (r0)
//cross over
@0ad0 00000111 11000010  // not  r7, r6
@0ad2 00000111 01001010  // and  r7, r2
@0ad4 00000000 10100001  // mov  r0, r5
@0ad6 00000000 11001010  // and  r0, r6
@0ad8 00000111 00001011  // or   r7, r0

@0ada 00000000 11100001  // mov  r0, r7
@0adc 00000000 10100101  // sub  r0, r5
@0ade 10001000 00001010  // bnez r0, 10
//mitation
@0ae0 00000101 10100010  // not  r5, r5
@0ae2 00000111 11000010  // not  r7, r6
@0ae4 00000111 01001010  // and  r7, r2
@0ae6 00000101 11001010  // and  r5, r6
@0ae8 00000111 10101011  // or   r7, r5
//write new gene
@0aea 00000111 10010000  // sw   r7, (r4)
@0aec 00100100 00000010  // addi r4, 2
//update cross parameter
@0aee 00000110 01100011  // xor  r6, r3
@0af0 00110000 11111100  // lui  r0, #fc
@0af2 00001111 10101011  // lli  r7, #ab
@0af4 00000000 11100100  // add  r0,r7
@0af6 00000110 00000100  // add  r6, r0
@0af8 00110000 01111111  // lui  r0, #7f
@0afa 00100000 01111111  // addi r0, #7f
@0afc 00000110 00001010  // and  r6, r0
@0afe 00000110 10010000  // sw   r6, (r4)

//---------------------------
@0b00 11000000 00000100  // j 4
@0b02 00000000 00000000  // nop
@0b04 11000000 10110110  // j -74
//----------14 gene----------

//set gene addr
@0b06 00110100 10100000  // lui  r4, #a0
@0b08 00100100 01110000  // addi r4, #70       //add
//check: is best gene
@0b0a 00000000 00100001  // mov  r0, r1
@0b0c 00000000 10000101  // sub  r0, r4
@0b0e 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0b10 00000101 10010001  // lw   r5, (r4)
@0b12 00000000 10000001  // mov  r0, r4
@0b14 00100000 00000010  // addi r0, 2
@0b16 00000110 00010001  // lw   r6, (r0)
//cross over
@0b18 00000111 11000010  // not  r7, r6
@0b1a 00000111 01001010  // and  r7, r2
@0b1c 00000000 10100001  // mov  r0, r5
@0b1e 00000000 11001010  // and  r0, r6
@0b20 00000111 00001011  // or   r7, r0

@0b22 00000000 11100001  // mov  r0, r7
@0b24 00000000 10100101  // sub  r0, r5
@0b26 10001000 00001010  // bnez r0, 10
//mitation
@0b28 00000101 10100010  // not  r5, r5
@0b2a 00000111 11000010  // not  r7, r6
@0b2c 00000111 01001010  // and  r7, r2
@0b2e 00000101 11001010  // and  r5, r6
@0b30 00000111 10101011  // or   r7, r5
//write new gene
@0b32 00000111 10010000  // sw   r7, (r4)
@0b34 00100100 00000010  // addi r4, 2
//update cross parameter
@0b36 00000110 01100011  // xor  r6, r3
@0b38 00110000 11111100  // lui  r0, #fc
@0b3a 00001111 10101011  // lli  r7, #ab
@0b3c 00000000 11100100  // add  r0,r7
@0b3e 00000110 00000100  // add  r6, r0
@0b40 00110000 01111111  // lui  r0, #7f
@0b42 00100000 01111111  // addi r0, #7f
@0b44 00000110 00001010  // and  r6, r0
@0b46 00000110 10010000  // sw   r6, (r4)

//---------------------------
@0b48 11000000 00000100  // j 4
@0b4a 00000000 00000000  // nop
@0b4c 11000000 10110110  // j -74
//----------15 gene----------

//set gene addr
@0b4e 00110100 10100000  // lui  r4, #a0
@0b50 00100100 01111000  // addi r4, #78       //add
//check: is best gene
@0b52 00000000 00100001  // mov  r0, r1
@0b54 00000000 10000101  // sub  r0, r4
@0b56 10000000 00111000  // beqz r0, 56                      
//set gene and cross parameter
@0b58 00000101 10010001  // lw   r5, (r4)
@0b5a 00000000 10000001  // mov  r0, r4
@0b5c 00100000 00000010  // addi r0, 2
@0b5e 00000110 00010001  // lw   r6, (r0)
//cross over
@0b60 00000111 11000010  // not  r7, r6
@0b62 00000111 01001010  // and  r7, r2
@0b64 00000000 10100001  // mov  r0, r5
@0b66 00000000 11001010  // and  r0, r6
@0b68 00000111 00001011  // or   r7, r0

@0b6a 00000000 11100001  // mov  r0, r7
@0b6c 00000000 10100101  // sub  r0, r5
@0b6e 10001000 00001010  // bnez r0, 10
//mitation
@0b70 00000101 10100010  // not  r5, r5
@0b72 00000111 11000010  // not  r7, r6
@0b74 00000111 01001010  // and  r7, r2
@0b76 00000101 11001010  // and  r5, r6
@0b78 00000111 10101011  // or   r7, r5
//write new gene
@0b7a 00000111 10010000  // sw   r7, (r4)
@0b7c 00100100 00000010  // addi r4, 2
//update cross parameter
@0b7e 00000110 01100011  // xor  r6, r3
@0b80 00110000 11111100  // lui  r0, #fc
@0b82 00001111 10101011  // lli  r7, #ab
@0b84 00000000 11100100  // add  r0,r7
@0b86 00000110 00000100  // add  r6, r0
@0b88 00110000 01111111  // lui  r0, #7f
@0b8a 00100000 01111111  // addi r0, #7f
@0b8c 00000110 00001010  // and  r6, r0
@0b8e 00000110 10010000  // sw   r6, (r4)

//---------------------------

//#################################################################

@0b90 00110001 10011001  // lui  r1, #99
@0b92 00000000 00110001  // lw   r0, (r1)
@0b94 00100000 11111111  // addi r0, -1
@0b96 00000000 00110000  // sw   r0, (r1)

@0b98 10001000 10110010  // bnez r0, -78
//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
@0b9a 00000000 00000000  // nop


//reset best eval value
@0b9c 00001000 11111111  // lli  r0, -1


//----------0 gene----------

//reset eval value
@0b9e 00001111 00000000  // lli  r7, 0
//set eval value
@0ba0 00110001 10100000  // lui  r1, #a0    //add 
@0ba2 00000010 00110011  // lbu  r2, (r1)
@0ba4 00100001 00000001  // addi r1, 1
@0ba6 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0ba8 00000110 01000001  // mov  r6, r2
@0baa 00100110 10001111  // addi r6, -113
@0bac 10011110 01000110  // bpl  r6, 70
@0bae 00000110 01100001  // mov  r6, r3
@0bb0 00100110 10001111  // addi r6, -113
@0bb2 10011110 01000000  // bpl  r6, 64

//calc eval value
@0bb4 00110100 10110000  // lui  r4, #b0
@0bb6 00000001 01000110  // sl8  r1, r2
@0bb8 00000001 00101001  // sr   r1, r1
@0bba 00110101 11000000  // lui  r5, #c0
@0bbc 00000001 10100100  // add  r1, r5
@0bbe 00000001 01100100  // add  r1, r3
@0bc0 00001011 00010000  // lli  r3, 16
//y loop
@0bc2 00001110 00010000  // lli  r6, 16
//x loop
@0bc4 00000010 00110011  // lbu  r2, (r1)
@0bc6 00000101 10010011  // lbu  r5, (r4)
@0bc8 00000101 01000101  // sub  r5, r2
@0bca 10011101 00000110  // bpl  r5, 6
@0bcc 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0bce 00000010 10100010  // not  r2, r5
@0bd0 00100010 00000001  // addi r2, 1
@0bd2 00001101 11111111  // lli  r5, #ff
@0bd4 00000101 01000101  // sub  r5, r2
@0bd6 00000111 10100100  // add  r7, r5
//update coordinate
@0bd8 00100001 00000001  // addi r1, 1
@0bda 00100100 00000001  // addi r4, 1
@0bdc 00100110 11111111  // addi r6, -1
@0bde 10001110 11100100  // bnez r6, -28
@0be0 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0be2 00100001 11110000  // addi r1, -16
@0be4 00100011 11111111  // addi r3, -1
@0be6 00100001 00000001  // addi r1, 1             //plus (128)
@0be8 10001011 11011000  // bnez r3, -40 
@0bea 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0bec 00000111 11101001  // sr   r7, r7
@0bee 00110001 10100000  // lui  r1, #a0
@0bf0 00100001 00000100  // addi r1, #04    //add 
@0bf2 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0bf4 00000110 11100001  // mov  r6, r7
@0bf6 00000110 00000101  // sub  r6, r0
@0bf8 10010110 00001010  // bmi  r6, 10  //NOCHANGE
@0bfa 10000110 00001000  // beqz r6, 8   //NOCHANGE
@0bfc 00000000 11100001  // mov  r0, r7
@0bfe 00110011 10100000  // lui  r3, #a0    //add
@0c00 00110100 10011000  // lui  r4, #98
@0c02 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------1 gene----------

//reset eval value
@0c04 00001111 00000000  // lli  r7, 0
//set eval value
@0c06 00110001 10100000  // lui  r1, #a0    //add 
@0c08 00100001 00001000  // addi  r1, #08
@0c0a 00000010 00110011  // lbu  r2, (r1)
@0c0c 00100001 00000001  // addi r1, 1
@0c0e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0c10 00000110 01000001  // mov  r6, r2
@0c12 00100110 10001111  // addi r6, -113
@0c14 10011110 01000110  // bpl  r6, 70
@0c16 00000110 01100001  // mov  r6, r3
@0c18 00100110 10001111  // addi r6, -113
@0c1a 10011110 01000000  // bpl  r6, 64

//calc eval value
@0c1c 00110100 10110000  // lui  r4, #b0
@0c1e 00000001 01000110  // sl8  r1, r2
@0c20 00000001 00101001  // sr   r1, r1
@0c22 00110101 11000000  // lui  r5, #c0
@0c24 00000001 10100100  // add  r1, r5
@0c26 00000001 01100100  // add  r1, r3
@0c28 00001011 00010000  // lli  r3, 16
//y loop
@0c2a 00001110 00010000  // lli  r6, 16
//x loop
@0c2c 00000010 00110011  // lbu  r2, (r1)
@0c2e 00000101 10010011  // lbu  r5, (r4)
@0c30 00000101 01000101  // sub  r5, r2
@0c32 10011101 00000110  // bpl  r5, 6
@0c34 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0c36 00000010 10100010  // not  r2, r5
@0c38 00100010 00000001  // addi r2, 1
@0c3a 00001101 11111111  // lli  r5, #ff
@0c3c 00000101 01000101  // sub  r5, r2
@0c3e 00000111 10100100  // add  r7, r5
//update coordinate
@0c40 00100001 00000001  // addi r1, 1
@0c42 00100100 00000001  // addi r4, 1
@0c44 00100110 11111111  // addi r6, -1
@0c46 10001110 11100100  // bnez r6, -28
@0c48 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0c4a 00100001 11110000  // addi r1, -16
@0c4c 00100011 11111111  // addi r3, -1
@0c4e 00100001 00000001  // addi r1, 1             //plus (128)
@0c50 10001011 11011000  // bnez r3, -40 
@0c52 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0c54 00000111 11101001  // sr   r7, r7
@0c56 00110001 10100000  // lui  r1, #a0
@0c58 00100001 00001100  // addi r1, #0c    //add 
@0c5a 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0c5c 00000110 11100001  // mov  r6, r7
@0c5e 00000110 00000101  // sub  r6, r0
@0c60 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0c62 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0c64 00000000 11100001  // mov  r0, r7
@0c66 00110011 10100000  // lui  r3, #a0    //add
@0c68 00100011 00001000  // addi r3, #08
@0c6a 00110100 10011000  // lui  r4, #98
@0c6c 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------2 gene----------

//reset eval value
@0c6e 00001111 00000000  // lli  r7, 0
//set eval value
@0c70 00110001 10100000  // lui  r1, #a0    //add 
@0c72 00100001 00010000  // addi  r1, #10
@0c74 00000010 00110011  // lbu  r2, (r1)
@0c76 00100001 00000001  // addi r1, 1
@0c78 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0c7a 00000110 01000001  // mov  r6, r2
@0c7c 00100110 10001111  // addi r6, -113
@0c7e 10011110 01000110  // bpl  r6, 70
@0c80 00000110 01100001  // mov  r6, r3
@0c82 00100110 10001111  // addi r6, -113
@0c84 10011110 01000000  // bpl  r6, 64

//calc eval value
@0c86 00110100 10110000  // lui  r4, #b0
@0c88 00000001 01000110  // sl8  r1, r2
@0c8a 00000001 00101001  // sr   r1, r1
@0c8c 00110101 11000000  // lui  r5, #c0
@0c8e 00000001 10100100  // add  r1, r5
@0c90 00000001 01100100  // add  r1, r3
@0c92 00001011 00010000  // lli  r3, 16
//y loop
@0c94 00001110 00010000  // lli  r6, 16
//x loop
@0c96 00000010 00110011  // lbu  r2, (r1)
@0c98 00000101 10010011  // lbu  r5, (r4)
@0c9a 00000101 01000101  // sub  r5, r2
@0c9c 10011101 00000110  // bpl  r5, 6
@0c9e 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0ca0 00000010 10100010  // not  r2, r5
@0ca2 00100010 00000001  // addi r2, 1
@0ca4 00001101 11111111  // lli  r5, #ff
@0ca6 00000101 01000101  // sub  r5, r2
@0ca8 00000111 10100100  // add  r7, r5
//update coordinate
@0caa 00100001 00000001  // addi r1, 1
@0cac 00100100 00000001  // addi r4, 1
@0cae 00100110 11111111  // addi r6, -1
@0cb0 10001110 11100100  // bnez r6, -28
@0cb2 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0cb4 00100001 11110000  // addi r1, -16
@0cb6 00100011 11111111  // addi r3, -1
@0cb8 00100001 00000001  // addi r1, 1             //plus (128)
@0cba 10001011 11011000  // bnez r3, -40 
@0cbc 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0cbe 00000111 11101001  // sr   r7, r7
@0cc0 00110001 10100000  // lui  r1, #a0
@0cc2 00100001 00010100  // addi r1, #014    //add 
@0cc4 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0cc6 00000110 11100001  // mov  r6, r7
@0cc8 00000110 00000101  // sub  r6, r0
@0cca 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0ccc 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0cce 00000000 11100001  // mov  r0, r7
@0cd0 00110011 10100000  // lui  r3, #a0    //add
@0cd2 00100011 00010000  // addi r3, #10
@0cd4 00110100 10011000  // lui  r4, #98
@0cd6 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------3 gene----------

//reset eval value
@0cd8 00001111 00000000  // lli  r7, 0
//set eval value
@0cda 00110001 10100000  // lui  r1, #a0    //add 
@0cdc 00100001 00011000  // addi  r1, #18
@0cde 00000010 00110011  // lbu  r2, (r1)
@0ce0 00100001 00000001  // addi r1, 1
@0ce2 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0ce4 00000110 01000001  // mov  r6, r2
@0ce6 00100110 10001111  // addi r6, -113
@0ce8 10011110 01000110  // bpl  r6, 70
@0cea 00000110 01100001  // mov  r6, r3
@0cec 00100110 10001111  // addi r6, -113
@0cee 10011110 01000000  // bpl  r6, 64

//calc eval value
@0cf0 00110100 10110000  // lui  r4, #b0
@0cf2 00000001 01000110  // sl8  r1, r2
@0cf4 00000001 00101001  // sr   r1, r1
@0cf6 00110101 11000000  // lui  r5, #c0
@0cf8 00000001 10100100  // add  r1, r5
@0cfa 00000001 01100100  // add  r1, r3
@0cfc 00001011 00010000  // lli  r3, 16
//y loop
@0cfe 00001110 00010000  // lli  r6, 16
//x loop
@0d00 00000010 00110011  // lbu  r2, (r1)
@0d02 00000101 10010011  // lbu  r5, (r4)
@0d04 00000101 01000101  // sub  r5, r2
@0d06 10011101 00000110  // bpl  r5, 6
@0d08 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0d0a 00000010 10100010  // not  r2, r5
@0d0c 00100010 00000001  // addi r2, 1
@0d0e 00001101 11111111  // lli  r5, #ff
@0d10 00000101 01000101  // sub  r5, r2
@0d12 00000111 10100100  // add  r7, r5
//update coordinate
@0d14 00100001 00000001  // addi r1, 1
@0d16 00100100 00000001  // addi r4, 1
@0d18 00100110 11111111  // addi r6, -1
@0d1a 10001110 11100100  // bnez r6, -28
@0d1c 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0d1e 00100001 11110000  // addi r1, -16
@0d20 00100011 11111111  // addi r3, -1
@0d22 00100001 00000001  // addi r1, 1             //plus (128)
@0d24 10001011 11011000  // bnez r3, -40 
@0d26 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0d28 00000111 11101001  // sr   r7, r7
@0d2a 00110001 10100000  // lui  r1, #a0
@0d2c 00100001 00011100  // addi r1, #01c    //add 
@0d2e 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0d30 00000110 11100001  // mov  r6, r7
@0d32 00000110 00000101  // sub  r6, r0
@0d34 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0d36 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0d38 00000000 11100001  // mov  r0, r7
@0d3a 00110011 10100000  // lui  r3, #a0    //add
@0d3c 00100011 00011000  // addi r3, #18
@0d3e 00110100 10011000  // lui  r4, #98
@0d40 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------4 gene----------

//reset eval value
@0d42 00001111 00000000  // lli  r7, 0
//set eval value
@0d44 00110001 10100000  // lui  r1, #a0    //add 
@0d46 00100001 00100000  // addi  r1, #20
@0d48 00000010 00110011  // lbu  r2, (r1)
@0d4a 00100001 00000001  // addi r1, 1
@0d4c 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0d4e 00000110 01000001  // mov  r6, r2
@0d50 00100110 10001111  // addi r6, -113
@0d52 10011110 01000110  // bpl  r6, 70
@0d54 00000110 01100001  // mov  r6, r3
@0d56 00100110 10001111  // addi r6, -113
@0d58 10011110 01000000  // bpl  r6, 64

//calc eval value
@0d5a 00110100 10110000  // lui  r4, #b0
@0d5c 00000001 01000110  // sl8  r1, r2
@0d5e 00000001 00101001  // sr   r1, r1
@0d60 00110101 11000000  // lui  r5, #c0
@0d62 00000001 10100100  // add  r1, r5
@0d64 00000001 01100100  // add  r1, r3
@0d66 00001011 00010000  // lli  r3, 16
//y loop
@0d68 00001110 00010000  // lli  r6, 16
//x loop
@0d6a 00000010 00110011  // lbu  r2, (r1)
@0d6c 00000101 10010011  // lbu  r5, (r4)
@0d6e 00000101 01000101  // sub  r5, r2
@0d70 10011101 00000110  // bpl  r5, 6
@0d72 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0d74 00000010 10100010  // not  r2, r5
@0d76 00100010 00000001  // addi r2, 1
@0d78 00001101 11111111  // lli  r5, #ff
@0d7a 00000101 01000101  // sub  r5, r2
@0d7c 00000111 10100100  // add  r7, r5
//update coordinate
@0d7e 00100001 00000001  // addi r1, 1
@0d80 00100100 00000001  // addi r4, 1
@0d82 00100110 11111111  // addi r6, -1
@0d84 10001110 11100100  // bnez r6, -28
@0d86 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0d88 00100001 11110000  // addi r1, -16
@0d8a 00100011 11111111  // addi r3, -1
@0d8c 00100001 00000001  // addi r1, 1             //plus (128)
@0d8e 10001011 11011000  // bnez r3, -40 
@0d90 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0d92 00000111 11101001  // sr   r7, r7
@0d94 00110001 10100000  // lui  r1, #a0
@0d96 00100001 00100100  // addi r1, #24    //add 
@0d98 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0d9a 00000110 11100001  // mov  r6, r7
@0d9c 00000110 00000101  // sub  r6, r0
@0d9e 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0da0 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0da2 00000000 11100001  // mov  r0, r7
@0da4 00110011 10100000  // lui  r3, #a0    //add
@0da6 00100011 00100000  // addi r3, #20
@0da8 00110100 10011000  // lui  r4, #98
@0daa 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------5 gene----------

//reset eval value
@0dac 00001111 00000000  // lli  r7, 0
//set eval value
@0dae 00110001 10100000  // lui  r1, #a0    //add 
@0db0 00100001 00101000  // addi  r1, #28
@0db2 00000010 00110011  // lbu  r2, (r1)
@0db4 00100001 00000001  // addi r1, 1
@0db6 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0db8 00000110 01000001  // mov  r6, r2
@0dba 00100110 10001111  // addi r6, -113
@0dbc 10011110 01000110  // bpl  r6, 70
@0dbe 00000110 01100001  // mov  r6, r3
@0dc0 00100110 10001111  // addi r6, -113
@0dc2 10011110 01000000  // bpl  r6, 64

//calc eval value
@0dc4 00110100 10110000  // lui  r4, #b0
@0dc6 00000001 01000110  // sl8  r1, r2
@0dc8 00000001 00101001  // sr   r1, r1
@0dca 00110101 11000000  // lui  r5, #c0
@0dcc 00000001 10100100  // add  r1, r5
@0dce 00000001 01100100  // add  r1, r3
@0dd0 00001011 00010000  // lli  r3, 16
//y loop
@0dd2 00001110 00010000  // lli  r6, 16
//x loop
@0dd4 00000010 00110011  // lbu  r2, (r1)
@0dd6 00000101 10010011  // lbu  r5, (r4)
@0dd8 00000101 01000101  // sub  r5, r2
@0dda 10011101 00000110  // bpl  r5, 6
@0ddc 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0dde 00000010 10100010  // not  r2, r5
@0de0 00100010 00000001  // addi r2, 1
@0de2 00001101 11111111  // lli  r5, #ff
@0de4 00000101 01000101  // sub  r5, r2
@0de6 00000111 10100100  // add  r7, r5
//update coordinate
@0de8 00100001 00000001  // addi r1, 1
@0dea 00100100 00000001  // addi r4, 1
@0dec 00100110 11111111  // addi r6, -1
@0dee 10001110 11100100  // bnez r6, -28
@0df0 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0df2 00100001 11110000  // addi r1, -16
@0df4 00100011 11111111  // addi r3, -1
@0df6 00100001 00000001  // addi r1, 1             //plus (128)
@0df8 10001011 11011000  // bnez r3, -40 
@0dfa 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0dfc 00000111 11101001  // sr   r7, r7
@0dfe 00110001 10100000  // lui  r1, #a0
@0e00 00100001 00101100  // addi r1, #2c    //add 
@0e02 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0e04 00000110 11100001  // mov  r6, r7
@0e06 00000110 00000101  // sub  r6, r0
@0e08 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0e0a 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0e0c 00000000 11100001  // mov  r0, r7
@0e0e 00110011 10100000  // lui  r3, #a0    //add
@0e10 00100011 00101000  // addi r3, #28
@0e12 00110100 10011000  // lui  r4, #98
@0e14 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------6 gene----------

//reset eval value
@0e16 00001111 00000000  // lli  r7, 0
//set eval value
@0e18 00110001 10100000  // lui  r1, #a0    //add 
@0e1a 00100001 00110000  // addi  r1, #30
@0e1c 00000010 00110011  // lbu  r2, (r1)
@0e1e 00100001 00000001  // addi r1, 1
@0e20 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0e22 00000110 01000001  // mov  r6, r2
@0e24 00100110 10001111  // addi r6, -113
@0e26 10011110 01000110  // bpl  r6, 70
@0e28 00000110 01100001  // mov  r6, r3
@0e2a 00100110 10001111  // addi r6, -113
@0e2c 10011110 01000000  // bpl  r6, 64

//calc eval value
@0e2e 00110100 10110000  // lui  r4, #b0
@0e30 00000001 01000110  // sl8  r1, r2
@0e32 00000001 00101001  // sr   r1, r1
@0e34 00110101 11000000  // lui  r5, #c0
@0e36 00000001 10100100  // add  r1, r5
@0e38 00000001 01100100  // add  r1, r3
@0e3a 00001011 00010000  // lli  r3, 16
//y loop
@0e3c 00001110 00010000  // lli  r6, 16
//x loop
@0e3e 00000010 00110011  // lbu  r2, (r1)
@0e40 00000101 10010011  // lbu  r5, (r4)
@0e42 00000101 01000101  // sub  r5, r2
@0e44 10011101 00000110  // bpl  r5, 6
@0e46 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0e48 00000010 10100010  // not  r2, r5
@0e4a 00100010 00000001  // addi r2, 1
@0e4c 00001101 11111111  // lli  r5, #ff
@0e4e 00000101 01000101  // sub  r5, r2
@0e50 00000111 10100100  // add  r7, r5
//update coordinate
@0e52 00100001 00000001  // addi r1, 1
@0e54 00100100 00000001  // addi r4, 1
@0e56 00100110 11111111  // addi r6, -1
@0e58 10001110 11100100  // bnez r6, -28
@0e5a 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0e5c 00100001 11110000  // addi r1, -16
@0e5e 00100011 11111111  // addi r3, -1
@0e60 00100001 00000001  // addi r1, 1             //plus (128)
@0e62 10001011 11011000  // bnez r3, -40 
@0e64 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0e66 00000111 11101001  // sr   r7, r7
@0e68 00110001 10100000  // lui  r1, #a0
@0e6a 00100001 00110100  // addi r1, #34    //add 
@0e6c 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0e6e 00000110 11100001  // mov  r6, r7
@0e70 00000110 00000101  // sub  r6, r0
@0e72 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0e74 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0e76 00000000 11100001  // mov  r0, r7
@0e78 00110011 10100000  // lui  r3, #a0    //add
@0e7a 00100011 00110000  // addi r3, #30
@0e7c 00110100 10011000  // lui  r4, #98
@0e7e 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------7 gene----------

//reset eval value
@0e80 00001111 00000000  // lli  r7, 0
//set eval value
@0e82 00110001 10100000  // lui  r1, #a0    //add 
@0e84 00100001 00111000  // addi  r1, #38
@0e86 00000010 00110011  // lbu  r2, (r1)
@0e88 00100001 00000001  // addi r1, 1
@0e8a 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0e8c 00000110 01000001  // mov  r6, r2
@0e8e 00100110 10001111  // addi r6, -113
@0e90 10011110 01000110  // bpl  r6, 70
@0e92 00000110 01100001  // mov  r6, r3
@0e94 00100110 10001111  // addi r6, -113
@0e96 10011110 01000000  // bpl  r6, 64

//calc eval value
@0e98 00110100 10110000  // lui  r4, #b0
@0e9a 00000001 01000110  // sl8  r1, r2
@0e9c 00000001 00101001  // sr   r1, r1
@0e9e 00110101 11000000  // lui  r5, #c0
@0ea0 00000001 10100100  // add  r1, r5
@0ea2 00000001 01100100  // add  r1, r3
@0ea4 00001011 00010000  // lli  r3, 16
//y loop
@0ea6 00001110 00010000  // lli  r6, 16
//x loop
@0ea8 00000010 00110011  // lbu  r2, (r1)
@0eaa 00000101 10010011  // lbu  r5, (r4)
@0eac 00000101 01000101  // sub  r5, r2
@0eae 10011101 00000110  // bpl  r5, 6
@0eb0 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0eb2 00000010 10100010  // not  r2, r5
@0eb4 00100010 00000001  // addi r2, 1
@0eb6 00001101 11111111  // lli  r5, #ff
@0eb8 00000101 01000101  // sub  r5, r2
@0eba 00000111 10100100  // add  r7, r5
//update coordinate
@0ebc 00100001 00000001  // addi r1, 1
@0ebe 00100100 00000001  // addi r4, 1
@0ec0 00100110 11111111  // addi r6, -1
@0ec2 10001110 11100100  // bnez r6, -28
@0ec4 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0ec6 00100001 11110000  // addi r1, -16
@0ec8 00100011 11111111  // addi r3, -1
@0eca 00100001 00000001  // addi r1, 1             //plus (128)
@0ecc 10001011 11011000  // bnez r3, -40 
@0ece 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0ed0 00000111 11101001  // sr   r7, r7
@0ed2 00110001 10100000  // lui  r1, #a0
@0ed4 00100001 00111100  // addi r1, #3c    //add 
@0ed6 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0ed8 00000110 11100001  // mov  r6, r7
@0eda 00000110 00000101  // sub  r6, r0
@0edc 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0ede 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0ee0 00000000 11100001  // mov  r0, r7
@0ee2 00110011 10100000  // lui  r3, #a0    //add
@0ee4 00100011 00111000  // addi r3, #38
@0ee6 00110100 10011000  // lui  r4, #98
@0ee8 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------8 gene----------

//reset eval value
@0eea 00001111 00000000  // lli  r7, 0
//set eval value
@0eec 00110001 10100000  // lui  r1, #a0
@0eee 00100001 01000000  // addi  r1, #40    //add 
@0ef0 00000010 00110011  // lbu  r2, (r1)
@0ef2 00100001 00000001  // addi r1, 1
@0ef4 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0ef6 00000110 01000001  // mov  r6, r2
@0ef8 00100110 10001111  // addi r6, -113
@0efa 10011110 01000110  // bpl  r6, 70
@0efc 00000110 01100001  // mov  r6, r3
@0efe 00100110 10001111  // addi r6, -113
@0f00 10011110 01000000  // bpl  r6, 64

//calc eval value
@0f02 00110100 10110000  // lui  r4, #b0
@0f04 00000001 01000110  // sl8  r1, r2
@0f06 00000001 00101001  // sr   r1, r1
@0f08 00110101 11000000  // lui  r5, #c0
@0f0a 00000001 10100100  // add  r1, r5
@0f0c 00000001 01100100  // add  r1, r3
@0f0e 00001011 00010000  // lli  r3, 16
//y loop
@0f10 00001110 00010000  // lli  r6, 16
//x loop
@0f12 00000010 00110011  // lbu  r2, (r1)
@0f14 00000101 10010011  // lbu  r5, (r4)
@0f16 00000101 01000101  // sub  r5, r2
@0f18 10011101 00000110  // bpl  r5, 6
@0f1a 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0f1c 00000010 10100010  // not  r2, r5
@0f1e 00100010 00000001  // addi r2, 1
@0f20 00001101 11111111  // lli  r5, #ff
@0f22 00000101 01000101  // sub  r5, r2
@0f24 00000111 10100100  // add  r7, r5
//update coordinate
@0f26 00100001 00000001  // addi r1, 1
@0f28 00100100 00000001  // addi r4, 1
@0f2a 00100110 11111111  // addi r6, -1
@0f2c 10001110 11100100  // bnez r6, -28
@0f2e 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0f30 00100001 11110000  // addi r1, -16
@0f32 00100011 11111111  // addi r3, -1
@0f34 00100001 00000001  // addi r1, 1             //plus (128)
@0f36 10001011 11011000  // bnez r3, -40 
@0f38 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0f3a 00000111 11101001  // sr   r7, r7
@0f3c 00110001 10100000  // lui  r1, #a0
@0f3e 00100001 01000100  // addi r1, #44    //add 
@0f40 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0f42 00000110 11100001  // mov  r6, r7
@0f44 00000110 00000101  // sub  r6, r0
@0f46 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0f48 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0f4a 00000000 11100001  // mov  r0, r7
@0f4c 00110011 10100000  // lui  r3, #a0
@0f4e 00100011 01000000  // addi r3, #40    //add
@0f50 00110100 10011000  // lui  r4, #98
@0f52 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------9 gene----------

//reset eval value
@0f54 00001111 00000000  // lli  r7, 0
//set eval value
@0f56 00110001 10100000  // lui  r1, #a0
@0f58 00100001 01001000  // addi  r1, #48    //add 
@0f5a 00000010 00110011  // lbu  r2, (r1)
@0f5c 00100001 00000001  // addi r1, 1
@0f5e 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0f60 00000110 01000001  // mov  r6, r2
@0f62 00100110 10001111  // addi r6, -113
@0f64 10011110 01000110  // bpl  r6, 70
@0f66 00000110 01100001  // mov  r6, r3
@0f68 00100110 10001111  // addi r6, -113
@0f6a 10011110 01000000  // bpl  r6, 64

//calc eval value
@0f6c 00110100 10110000  // lui  r4, #b0
@0f6e 00000001 01000110  // sl8  r1, r2
@0f70 00000001 00101001  // sr   r1, r1
@0f72 00110101 11000000  // lui  r5, #c0
@0f74 00000001 10100100  // add  r1, r5
@0f76 00000001 01100100  // add  r1, r3
@0f78 00001011 00010000  // lli  r3, 16
//y loop
@0f7a 00001110 00010000  // lli  r6, 16
//x loop
@0f7c 00000010 00110011  // lbu  r2, (r1)
@0f7e 00000101 10010011  // lbu  r5, (r4)
@0f80 00000101 01000101  // sub  r5, r2
@0f82 10011101 00000110  // bpl  r5, 6
@0f84 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0f86 00000010 10100010  // not  r2, r5
@0f88 00100010 00000001  // addi r2, 1
@0f8a 00001101 11111111  // lli  r5, #ff
@0f8c 00000101 01000101  // sub  r5, r2
@0f8e 00000111 10100100  // add  r7, r5
//update coordinate
@0f90 00100001 00000001  // addi r1, 1
@0f92 00100100 00000001  // addi r4, 1
@0f94 00100110 11111111  // addi r6, -1
@0f96 10001110 11100100  // bnez r6, -28
@0f98 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@0f9a 00100001 11110000  // addi r1, -16
@0f9c 00100011 11111111  // addi r3, -1
@0f9e 00100001 00000001  // addi r1, 1             //plus (128)
@0fa0 10001011 11011000  // bnez r3, -40 
@0fa2 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@0fa4 00000111 11101001  // sr   r7, r7
@0fa6 00110001 10100000  // lui  r1, #a0
@0fa8 00100001 01001100  // addi r1, #4c    //add 
@0faa 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@0fac 00000110 11100001  // mov  r6, r7
@0fae 00000110 00000101  // sub  r6, r0
@0fb0 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@0fb2 10000110 00001010  // beqz r6, 10   //NOCHANGE
@0fb4 00000000 11100001  // mov  r0, r7
@0fb6 00110011 10100000  // lui  r3, #a0
@0fb8 00100011 01001000  // addi r3, #48    //add
@0fba 00110100 10011000  // lui  r4, #98
@0fbc 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------10 gene----------

//reset eval value
@0fbe 00001111 00000000  // lli  r7, 0
//set eval value
@0fc0 00110001 10100000  // lui  r1, #a0
@0fc2 00100001 01010000  // addi  r1, #50    //add 
@0fc4 00000010 00110011  // lbu  r2, (r1)
@0fc6 00100001 00000001  // addi r1, 1
@0fc8 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@0fca 00000110 01000001  // mov  r6, r2
@0fcc 00100110 10001111  // addi r6, -113
@0fce 10011110 01000110  // bpl  r6, 70
@0fd0 00000110 01100001  // mov  r6, r3
@0fd2 00100110 10001111  // addi r6, -113
@0fd4 10011110 01000000  // bpl  r6, 64

//calc eval value
@0fd6 00110100 10110000  // lui  r4, #b0
@0fd8 00000001 01000110  // sl8  r1, r2
@0fda 00000001 00101001  // sr   r1, r1
@0fdc 00110101 11000000  // lui  r5, #c0
@0fde 00000001 10100100  // add  r1, r5
@0fe0 00000001 01100100  // add  r1, r3
@0fe2 00001011 00010000  // lli  r3, 16
//y loop
@0fe4 00001110 00010000  // lli  r6, 16
//x loop
@0fe6 00000010 00110011  // lbu  r2, (r1)
@0fe8 00000101 10010011  // lbu  r5, (r4)
@0fea 00000101 01000101  // sub  r5, r2
@0fec 10011101 00000110  // bpl  r5, 6
@0fee 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@0ff0 00000010 10100010  // not  r2, r5
@0ff2 00100010 00000001  // addi r2, 1
@0ff4 00001101 11111111  // lli  r5, #ff
@0ff6 00000101 01000101  // sub  r5, r2
@0ff8 00000111 10100100  // add  r7, r5
//update coordinate
@0ffa 00100001 00000001  // addi r1, 1
@0ffc 00100100 00000001  // addi r4, 1
@0ffe 00100110 11111111  // addi r6, -1
@1000 10001110 11100100  // bnez r6, -28
@1002 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@1004 00100001 11110000  // addi r1, -16
@1006 00100011 11111111  // addi r3, -1
@1008 00100001 00000001  // addi r1, 1             //plus (128)
@100a 10001011 11011000  // bnez r3, -40 
@100c 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@100e 00000111 11101001  // sr   r7, r7
@1010 00110001 10100000  // lui  r1, #a0
@1012 00100001 01010100  // addi r1, #54    //add 
@1014 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@1016 00000110 11100001  // mov  r6, r7
@1018 00000110 00000101  // sub  r6, r0
@101a 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@101c 10000110 00001010  // beqz r6, 10   //NOCHANGE
@101e 00000000 11100001  // mov  r0, r7
@1020 00110011 10100000  // lui  r3, #a0
@1022 00100011 01010000  // addi r3, #50    //add
@1024 00110100 10011000  // lui  r4, #98
@1026 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------11 gene----------

//reset eval value
@1028 00001111 00000000  // lli  r7, 0
//set eval value
@102a 00110001 10100000  // lui  r1, #a0
@102c 00100001 01011000  // addi  r1, #58    //add 
@102e 00000010 00110011  // lbu  r2, (r1)
@1030 00100001 00000001  // addi r1, 1
@1032 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@1034 00000110 01000001  // mov  r6, r2
@1036 00100110 10001111  // addi r6, -113
@1038 10011110 01000110  // bpl  r6, 70
@103a 00000110 01100001  // mov  r6, r3
@103c 00100110 10001111  // addi r6, -113
@103e 10011110 01000000  // bpl  r6, 64

//calc eval value
@1040 00110100 10110000  // lui  r4, #b0
@1042 00000001 01000110  // sl8  r1, r2
@1044 00000001 00101001  // sr   r1, r1
@1046 00110101 11000000  // lui  r5, #c0
@1048 00000001 10100100  // add  r1, r5
@104a 00000001 01100100  // add  r1, r3
@104c 00001011 00010000  // lli  r3, 16
//y loop
@104e 00001110 00010000  // lli  r6, 16
//x loop
@1050 00000010 00110011  // lbu  r2, (r1)
@1052 00000101 10010011  // lbu  r5, (r4)
@1054 00000101 01000101  // sub  r5, r2
@1056 10011101 00000110  // bpl  r5, 6
@1058 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@105a 00000010 10100010  // not  r2, r5
@105c 00100010 00000001  // addi r2, 1
@105e 00001101 11111111  // lli  r5, #ff
@1060 00000101 01000101  // sub  r5, r2
@1062 00000111 10100100  // add  r7, r5
//update coordinate
@1064 00100001 00000001  // addi r1, 1
@1066 00100100 00000001  // addi r4, 1
@1068 00100110 11111111  // addi r6, -1
@106a 10001110 11100100  // bnez r6, -28
@106c 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@106e 00100001 11110000  // addi r1, -16
@1070 00100011 11111111  // addi r3, -1
@1072 00100001 00000001  // addi r1, 1             //plus (128)
@1074 10001011 11011000  // bnez r3, -40 
@1076 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@1078 00000111 11101001  // sr   r7, r7
@107a 00110001 10100000  // lui  r1, #a0
@107c 00100001 01011100  // addi r1, #5c    //add 
@107e 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@1080 00000110 11100001  // mov  r6, r7
@1082 00000110 00000101  // sub  r6, r0
@1084 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@1086 10000110 00001010  // beqz r6, 10   //NOCHANGE
@1088 00000000 11100001  // mov  r0, r7
@108a 00110011 10100000  // lui  r3, #a0
@108c 00100011 01011000  // addi r3, #58    //add
@108e 00110100 10011000  // lui  r4, #98
@1090 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------12 gene----------

//reset eval value
@1092 00001111 00000000  // lli  r7, 0
//set eval value
@1094 00110001 10100000  // lui  r1, #a0
@1096 00100001 01100000  // addi  r1, #60    //add 
@1098 00000010 00110011  // lbu  r2, (r1)
@109a 00100001 00000001  // addi r1, 1
@109c 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@109e 00000110 01000001  // mov  r6, r2
@10a0 00100110 10001111  // addi r6, -113
@10a2 10011110 01000110  // bpl  r6, 70
@10a4 00000110 01100001  // mov  r6, r3
@10a6 00100110 10001111  // addi r6, -113
@10a8 10011110 01000000  // bpl  r6, 64

//calc eval value
@10aa 00110100 10110000  // lui  r4, #b0
@10ac 00000001 01000110  // sl8  r1, r2
@10ae 00000001 00101001  // sr   r1, r1
@10b0 00110101 11000000  // lui  r5, #c0
@10b2 00000001 10100100  // add  r1, r5
@10b4 00000001 01100100  // add  r1, r3
@10b6 00001011 00010000  // lli  r3, 16
//y loop
@10b8 00001110 00010000  // lli  r6, 16
//x loop
@10ba 00000010 00110011  // lbu  r2, (r1)
@10bc 00000101 10010011  // lbu  r5, (r4)
@10be 00000101 01000101  // sub  r5, r2
@10c0 10011101 00000110  // bpl  r5, 6
@10c2 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@10c4 00000010 10100010  // not  r2, r5
@10c6 00100010 00000001  // addi r2, 1
@10c8 00001101 11111111  // lli  r5, #ff
@10ca 00000101 01000101  // sub  r5, r2
@10cc 00000111 10100100  // add  r7, r5
//update coordinate
@10ce 00100001 00000001  // addi r1, 1
@10d0 00100100 00000001  // addi r4, 1
@10d2 00100110 11111111  // addi r6, -1
@10d4 10001110 11100100  // bnez r6, -28
@10d6 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@10d8 00100001 11110000  // addi r1, -16
@10da 00100011 11111111  // addi r3, -1
@10dc 00100001 00000001  // addi r1, 1             //plus (128)
@10de 10001011 11011000  // bnez r3, -40 
@10e0 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@10e2 00000111 11101001  // sr   r7, r7
@10e4 00110001 10100000  // lui  r1, #a0
@10e6 00100001 01100100  // addi r1, #64   //add 
@10e8 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@10ea 00000110 11100001  // mov  r6, r7
@10ec 00000110 00000101  // sub  r6, r0
@10ee 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@10f0 10000110 00001010  // beqz r6, 10   //NOCHANGE
@10f2 00000000 11100001  // mov  r0, r7
@10f4 00110011 10100000  // lui  r3, #a0
@10f6 00100011 01100000  // addi r3, #60    //add
@10f8 00110100 10011000  // lui  r4, #98
@10fa 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------13 gene----------

//reset eval value
@10fc 00001111 00000000  // lli  r7, 0
//set eval value
@10fe 00110001 10100000  // lui  r1, #a0
@1100 00100001 01101000  // addi  r1, #68    //add 
@1102 00000010 00110011  // lbu  r2, (r1)
@1104 00100001 00000001  // addi r1, 1
@1106 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@1108 00000110 01000001  // mov  r6, r2
@110a 00100110 10001111  // addi r6, -113
@110c 10011110 01000110  // bpl  r6, 70
@110e 00000110 01100001  // mov  r6, r3
@1110 00100110 10001111  // addi r6, -113
@1112 10011110 01000000  // bpl  r6, 64

//calc eval value
@1114 00110100 10110000  // lui  r4, #b0
@1116 00000001 01000110  // sl8  r1, r2
@1118 00000001 00101001  // sr   r1, r1
@111a 00110101 11000000  // lui  r5, #c0
@111c 00000001 10100100  // add  r1, r5
@111e 00000001 01100100  // add  r1, r3
@1120 00001011 00010000  // lli  r3, 16
//y loop
@1122 00001110 00010000  // lli  r6, 16
//x loop
@1124 00000010 00110011  // lbu  r2, (r1)
@1126 00000101 10010011  // lbu  r5, (r4)
@1128 00000101 01000101  // sub  r5, r2
@112a 10011101 00000110  // bpl  r5, 6
@112c 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@112e 00000010 10100010  // not  r2, r5
@1130 00100010 00000001  // addi r2, 1
@1132 00001101 11111111  // lli  r5, #ff
@1134 00000101 01000101  // sub  r5, r2
@1136 00000111 10100100  // add  r7, r5
//update coordinate
@1138 00100001 00000001  // addi r1, 1
@113a 00100100 00000001  // addi r4, 1
@113c 00100110 11111111  // addi r6, -1
@113e 10001110 11100100  // bnez r6, -28
@1140 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@1142 00100001 11110000  // addi r1, -16
@1144 00100011 11111111  // addi r3, -1
@1146 00100001 00000001  // addi r1, 1             //plus (128)
@1148 10001011 11011000  // bnez r3, -40 
@114a 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@114c 00000111 11101001  // sr   r7, r7
@114e 00110001 10100000  // lui  r1, #a0
@1150 00100001 01101100  // addi r1, #6c   //add 
@1152 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@1154 00000110 11100001  // mov  r6, r7
@1156 00000110 00000101  // sub  r6, r0
@1158 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@115a 10000110 00001010  // beqz r6, 10   //NOCHANGE
@115c 00000000 11100001  // mov  r0, r7
@115e 00110011 10100000  // lui  r3, #a0
@1160 00100011 01101000  // addi r3, #68    //add
@1162 00110100 10011000  // lui  r4, #98
@1164 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------14 gene----------

//reset eval value
@1166 00001111 00000000  // lli  r7, 0
//set eval value
@1168 00110001 10100000  // lui  r1, #a0
@116a 00100001 01110000  // addi  r1, #70    //add 
@116c 00000010 00110011  // lbu  r2, (r1)
@116e 00100001 00000001  // addi r1, 1
@1170 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@1172 00000110 01000001  // mov  r6, r2
@1174 00100110 10001111  // addi r6, -113
@1176 10011110 01000110  // bpl  r6, 70
@1178 00000110 01100001  // mov  r6, r3
@117a 00100110 10001111  // addi r6, -113
@117c 10011110 01000000  // bpl  r6, 64

//calc eval value
@117e 00110100 10110000  // lui  r4, #b0
@1180 00000001 01000110  // sl8  r1, r2
@1182 00000001 00101001  // sr   r1, r1
@1184 00110101 11000000  // lui  r5, #c0
@1186 00000001 10100100  // add  r1, r5
@1188 00000001 01100100  // add  r1, r3
@118a 00001011 00010000  // lli  r3, 16
//y loop
@118c 00001110 00010000  // lli  r6, 16
//x loop
@118e 00000010 00110011  // lbu  r2, (r1)
@1190 00000101 10010011  // lbu  r5, (r4)
@1192 00000101 01000101  // sub  r5, r2
@1194 10011101 00000110  // bpl  r5, 6
@1196 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@1198 00000010 10100010  // not  r2, r5
@119a 00100010 00000001  // addi r2, 1
@119c 00001101 11111111  // lli  r5, #ff
@119e 00000101 01000101  // sub  r5, r2
@11a0 00000111 10100100  // add  r7, r5
//update coordinate
@11a2 00100001 00000001  // addi r1, 1
@11a4 00100100 00000001  // addi r4, 1
@11a6 00100110 11111111  // addi r6, -1
@11a8 10001110 11100100  // bnez r6, -28
@11aa 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@11ac 00100001 11110000  // addi r1, -16
@11ae 00100011 11111111  // addi r3, -1
@11b0 00100001 00000001  // addi r1, 1             //plus (128)
@11b2 10001011 11011000  // bnez r3, -40 
@11b4 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@11b6 00000111 11101001  // sr   r7, r7
@11b8 00110001 10100000  // lui  r1, #a0
@11ba 00100001 01110100  // addi r1, #74   //add 
@11bc 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@11be 00000110 11100001  // mov  r6, r7
@11c0 00000110 00000101  // sub  r6, r0
@11c2 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@11c4 10000110 00001010  // beqz r6, 10   //NOCHANGE
@11c6 00000000 11100001  // mov  r0, r7
@11c8 00110011 10100000  // lui  r3, #a0
@11ca 00100011 01110000  // addi r3, #70    //add
@11cc 00110100 10011000  // lui  r4, #98
@11ce 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//----------15 gene----------

//reset eval value
@11d0 00001111 00000000  // lli  r7, 0
//set eval value
@11d2 00110001 10100000  // lui  r1, #a0
@11d4 00100001 01111000  // addi  r1, #78    //add 
@11d6 00000010 00110011  // lbu  r2, (r1)
@11d8 00100001 00000001  // addi r1, 1
@11da 00000011 00110011  // lbu  r3, (r1)

//ckeck: out of range
@11dc 00000110 01000001  // mov  r6, r2
@11de 00100110 10001111  // addi r6, -113
@11e0 10011110 01000110  // bpl  r6, 70
@11e2 00000110 01100001  // mov  r6, r3
@11e4 00100110 10001111  // addi r6, -113
@11e6 10011110 01000000  // bpl  r6, 64

//calc eval value
@11e8 00110100 10110000  // lui  r4, #b0
@11ea 00000001 01000110  // sl8  r1, r2
@11ec 00000001 00101001  // sr   r1, r1
@11ee 00110101 11000000  // lui  r5, #c0
@11f0 00000001 10100100  // add  r1, r5
@11f2 00000001 01100100  // add  r1, r3
@11f4 00001011 00010000  // lli  r3, 16
//y loop
@11f6 00001110 00010000  // lli  r6, 16
//x loop
@11f8 00000010 00110011  // lbu  r2, (r1)
@11fa 00000101 10010011  // lbu  r5, (r4)
@11fc 00000101 01000101  // sub  r5, r2
@11fe 10011101 00000110  // bpl  r5, 6
@1200 00000010 10100001  // mov  r2, r5  //delay
//minus to float
@1202 00000010 10100010  // not  r2, r5
@1204 00100010 00000001  // addi r2, 1
@1206 00001101 11111111  // lli  r5, #ff
@1208 00000101 01000101  // sub  r5, r2
@120a 00000111 10100100  // add  r7, r5
//update coordinate
@120c 00100001 00000001  // addi r1, 1
@120e 00100100 00000001  // addi r4, 1
@1210 00100110 11111111  // addi r6, -1
@1212 10001110 11100100  // bnez r6, -28
@1214 00100101 00000001  // addi r5, 1 //delay
//end  x loop
@1216 00100001 11110000  // addi r1, -16
@1218 00100011 11111111  // addi r3, -1
@121a 00100001 00000001  // addi r1, 1             //plus (128)
@121c 10001011 11011000  // bnez r3, -40 
@121e 00100001 01111111  // addi r1, 127 //delay  //plus (128)
//end y loop
//write eval value
@1220 00000111 11101001  // sr   r7, r7
@1222 00110001 10100000  // lui  r1, #a0
@1224 00100001 01111100  // addi r1, #7c   //add 
@1226 00000111 00110000  // sw   r7, (r1) 
//comp best gene
@1228 00000110 11100001  // mov  r6, r7
@122a 00000110 00000101  // sub  r6, r0
@122c 10010110 00001100  // bmi  r6, 12  //NOCHANGE
@122e 10000110 00001010  // beqz r6, 10   //NOCHANGE
@1230 00000000 11100001  // mov  r0, r7
@1232 00110011 10100000  // lui  r3, #a0
@1234 00100011 01111000  // addi r3, #78    //add
@1236 00110100 10011000  // lui  r4, #98
@1238 00000011 10010000  // sw   r3, (r4)
//NOCHANGE:

//--------------------------

//write answer
@123a 00110000 10011000  // lui  r0, #98
@123c 00000001 00010001  // lw   r1, (r0)
@123e 00000010 00110001  // lw   r2, (r1)
@1240 00100001 00000100  // addi r1, 4
@1242 00000011 00110001  // lw   r3, (r1)

@1244 00110101 10111111  // lui  r5, #bf
@1246 00000010 10110000  // sw   r2, (r5)
@1248 00100101 00000010  // addi r5, 2
@124a 00000011 10110000  // sw   r3, (r5)

@124c 00000000 00000000  // nop
@124e 11000000 11111110  // j -2
@1250 00000000 00000000  // nop 
